<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Core</name>
    </assembly>
    <members>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationContext">
            <summary>
            	A helper class, used for chain-creation and update of storyboards in a jQuery way.
            	This class is for internal use only.
            </summary>
            <remarks>
            	The Result storyboard is a collection of DoubleAnimationUsingKeyFrame collection.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationContext.Storyboard">
            <summary>
            Gets or sets the resultant Storyboard for the AnimationContext.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationContext.Arguments">
            <summary>
            Gets or sets optional arguments associated with the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationContext.Target">
            <summary>
            Gets the UIElement instance, which is the actual target of the animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.AnimationEndedEventArgs">
            <summary>
            Contains information about the <see cref="E:Telerik.Windows.Controls.RadAnimation.Ended"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.AnimationEndedEventArgs.#ctor(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.AnimationEndedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.AnimationEndedEventArgs.AnimationInfo">
            <summary>
            Gets the <see cref="T:System.Windows.UIElement"/> that was animated by the animation
            for which the <see cref="E:Telerik.Windows.Controls.RadAnimation.Ended"/> event fires.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadContinuumAnimation">
            <summary>
            Provides an animation exact copy of the Windows Phone list based transition.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadAnimation">
            <summary>
            Base class for dynamic control animations.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadAnimation.Empty">
            <summary>
            The Empty animation does nothing and must be used instead of null if no animation should be played.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.Clone">
            <summary>
            Creates a clone animation of this instance.
            </summary>
            <returns>Returns a clone animation of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.UpdateAnimation(System.Windows.UIElement,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            	When overridden in a derived class this method updates the animation
            	before it is played.
            </summary>
            <param name="target">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyboard that needs to be updated.</param>
            <param name="args">A set of arguments used for animation creation.</param>
            <remarks>
            	<para>
            		Currently the method sets the <see cref="P:Telerik.Windows.Controls.RadAnimation.SpeedRatio"/> of the storyboard to
            		the global <strong>AnimationSpeedRatio</strong> if the local <see cref="P:Telerik.Windows.Controls.RadAnimation.SpeedRatio"/> is null.
            		If the local <see cref="P:Telerik.Windows.Controls.RadAnimation.SpeedRatio"/> value is set, it will be used.
            	</para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.OnStopping(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Called by the animation manager before an associated storyboard is stopped.
            Allows inheritors to store any animated values to be restored later, when the storyboard is already stopped.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.OnStopped(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Called by the animation manager after an associated storyboard has been stopped.
            Allows inheritors to apply previously stored (if any) animated values. 
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.OnStarted(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Called by the animation manager when the storyboard has been started. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.CreateStoryboardOverride(System.Windows.UIElement)">
            <summary>
            Creates a storyboard for this animation.
            </summary>
            <param name="target">The target which the storyboard will animate.</param>
            <returns>Returns a new storyboard instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.CloneCore">
            <summary>
            Creates a clone animation of this instance.
            </summary>
            <returns>Returns a clone of this animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.CopyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Allows inheritors to store the animated values.
            This is useful if the animation wants to keep the final values upon storyboard stopping.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.OnEnded(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Fires the <see cref="E:Telerik.Windows.Controls.RadAnimation.Ended"/> event for the specific target provided
            in the <see cref="T:Telerik.Windows.Controls.Animation.PlayAnimationInfo"/> object.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimation.OnEnded">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.RadAnimation.Ended"/> event.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadAnimation.Ended">
            <summary>
            Occurs when animation has stopped running.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.Easing">
            <summary>
            Gets or sets a value describing the easing function to be used for the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.Duration">
            <summary>
            Gets or sets the duration of the animation. Defaults to (0:0:.4) - 400 milliseconds.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.InitialDelay">
            <summary>
            Gets or sets an initial delay that will be applied before the animation starts.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.AnimationName">
            <summary>
            Gets or sets the name of the animation.
            </summary>
            <remarks>
            	<para>
            		This property is used by the NamedAnimationSelector to identify the 
            		correct animation to return. 
            	</para>
            	<para>
            		It is not used outside the NamedAnimationSelector.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.FillBehavior">
            <summary>
            Gets or sets the FillBehavior property of the internally created storyboard, associated with this animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.SpeedRatio">
            <summary>
            Gets or sets the value for the SpeedRatio of the Storyboard generated by this animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.AutoReverse">
            <summary>
            Gets or sets the AutoReverse property of the internally created storyboard associated with this animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.RepeatBehavior">
            <summary>
            Gets or sets the repeat behavior of this RadAnimation instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.AnimationOrigin">
            <summary>
            Gets or sets the render transform origin of the animated element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimation.Parent">
            <summary>
            Gets or sets the parent group that owns this animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.IInOutAnimation">
            <summary>
            Specifies that an animation has in and out modes.
            For example an animation can be different depending whether
            the user is navigating to some page or from some page. The new
            page is animated with an "in" animation while the old page
            is animated with an "out" animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.IInOutAnimation.InOutAnimationMode">
            <summary>
            Gets or sets a value which indicates if an animation supports in and out modes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadContinuumAnimation.HeaderElementProperty">
            <summary>
            Identifies the HeaderElement property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadContinuumAnimation.ContinuumElementProperty">
            <summary>
            Identifies the ContinuumElement property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadContinuumAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.GetHeaderElement(System.Windows.DependencyObject)">
            <summary>
            Gets the PageHeader dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.SetPageHeader(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
            <summary>
            Sets the PageHeader dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.GetContinuumElement(System.Windows.DependencyObject)">
            <summary>
            Gets the ContinuumElement dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.SetContinuumElement(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
            <summary>
            Sets the ContinuumElement dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.OnStarted(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Called by the animation manager when the storyboard has been started.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadContinuumAnimation.InOutAnimationMode">
            <summary>
            Gets or sets the in out animation mode.
            </summary>
            <value>The in out animation mode.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadContinuumAnimation.SelectedItemDelay">
            <summary>
            Gets or sets the selected item delay.
            </summary>
            <value>The selected item delay.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadContinuumAnimation.ItemAnimationDuration">
            <summary>
            Gets or sets the duration of the item animation.
            </summary>
            <value>The duration of the item animation.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.MoveAnimationBase">
            <summary>
            This is the base class of the move X and move Y animations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MoveAnimationBase.#ctor">
            <summary>
            Initializes a new instance of the MoveAnimationBase class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MoveAnimationBase.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MoveAnimationBase.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.MoveAnimationBase.SwapValues">
            <summary>
            This method must be overridden and is called when this move animation has to swap its start and end values.
            This is necessary when an opposite animation is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MoveAnimationBase.GetMoveArguments(System.Double,System.Double)">
            <summary>
            Gets an array of interleaved duration/value pairs for this move animation's keyframes.
            </summary>
            <param name="startValue">The value of the first frame.</param>
            <param name="endValue">The value of the last frame.</param>
            <returns>Returns an array of interleaved duration/value pairs for this move animation's keyframes.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.MoveAnimationBase.PointMode">
            <summary>
            Gets or sets a value that determines how the move animation's start and end points will be interpreted.
            Absolute means that they will be interpreted as pixels and Relative means that they will interpreted as
            points in the [-1, 1] range.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MoveAnimationBase.MiddlePointsAxis">
            <summary>
            Gets or sets the middle points.
            </summary>
            <value>The middle points.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadMoveXAnimation">
            <summary>
            Represents a move animation on the X axis.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveXAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveXAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveXAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveXAnimation.GetX(System.Windows.UIElement,System.Nullable{System.Double})">
            <summary>
            Gets the value of a nullable X value if it is not null. If it is null it returns a point that represents the X
            component of the target's TranslateTransform.
            </summary>
            <param name="target">The target from which to obtain a point if the provided point is null.</param>
            <param name="x">A nullable X coordinate.</param>
            <returns>Returns the value of a nullable X value if it is not null. If it is null it returns a value that represents the X
            component of the target's TranslateTransform.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveXAnimation.GetRelativeX(System.Windows.FrameworkElement,System.Nullable{System.Double})">
            <summary>
            Gets an X value that is relative to the size of the animation target.
            </summary>
            <param name="target">The animation target.</param>
            <param name="x">The X value in relative coordinates.</param>
            <returns>Returns an X value in absolute coordinates based on the target's size and the relative argument.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveXAnimation.SwapValues">
            <summary>
            This method must be overridden and is called when this move animation has to swap its start and end values.
            This is necessary when an opposite animation is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveXAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveXAnimation.StartX">
            <summary>
            Gets or sets the start X value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveXAnimation.EndX">
            <summary>
            Gets or sets the end X value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadMoveYAnimation">
            <summary>
            Represents a move animation on the Y axis.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveYAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveYAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveYAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveYAnimation.GetY(System.Windows.UIElement,System.Nullable{System.Double})">
            <summary>
            Gets the value of a nullable Y value if it is not null. If it is null it returns a value that represents the Y
            component of the target's TranslateTransform.
            </summary>
            <param name="target">The target from which to obtain a Y value if the provided Y value is null.</param>
            <param name="y">A nullable Y value.</param>
            <returns>Returns the value of a nullable Y value if it is not null. If it is null it returns a point that represents the Y
            component of the target's TranslateTransform.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveYAnimation.GetRelativeY(System.Windows.FrameworkElement,System.Nullable{System.Double})">
            <summary>
            Gets a Y value that is relative to the height of the animation target.
            </summary>
            <param name="target">The animation target.</param>
            <param name="y">The Y value in relative coordinates.</param>
            <returns>Returns a Y value in absolute coordinates based on the target's height and the relative value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveYAnimation.SwapValues">
            <summary>
            This method must be overridden and is called when this move animation has to swap its start and end values.
            This is necessary when an opposite animation is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveYAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveYAnimation.StartY">
            <summary>
            Gets or sets the start Y value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveYAnimation.EndY">
            <summary>
            Gets or sets the end Y value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.MoveAnimationPointMode">
            <summary>
            Determines how the start and end points of the move animation will be interpreted.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveAnimationPointMode.Absolute">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveAnimationPointMode.Relative">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.MoveDirection">
            <summary>
            Provides intuitive values which describe common move animation scenarios.
            For example LeftIn means that the animated element is moving left and is coming in view.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.LeftIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.LeftOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.RightIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.RightOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.TopIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.TopOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.BottomIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MoveDirection.BottomOut">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadResizeHeightAnimation">
            <summary>
            This class represents a resize animation that animates the FrameworkElement.Height property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeHeightAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeHeightAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeHeightAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeHeightAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeHeightAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeHeightAnimation.StartHeight">
            <summary>
            Gets or sets the initial height. If no value is applied current element height is used.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeHeightAnimation.EndHeight">
            <summary>
            Gets or sets the final height of the animation target. If no value is applied current element height is used.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeHeightAnimation.Width">
            <summary>
            Gets or sets a the width that will be applied to the animation target during this animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadResizeWidthAnimation">
            <summary>
            This class represents a resize animation that animates the FrameworkElement.Width property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeWidthAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeWidthAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeWidthAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeWidthAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeWidthAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeWidthAnimation.StartWidth">
            <summary>
            Gets or sets the initial width. If no value is applied current element width is used.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeWidthAnimation.EndWidth">
            <summary>
            Gets or sets the final width of the animation target. If no value is applied current element width is used.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeWidthAnimation.Height">
            <summary>
            Gets or sets a the height that will be applied to the animation target during this animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation">
            <summary>
            Provides a pre-defined move, scale and fade animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadAnimationGroup">
            <summary>
            Represents composite animation, used for declaratively creating composite animations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadAnimationGroup"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.CloneCore">
            <summary>
            Creates a clone animation of this instance.
            </summary>
            <returns>Returns a clone of this animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.CreateStoryboardOverride(System.Windows.UIElement)">
            <summary>
            Core create routine.
            </summary>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationGroup.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimationGroup.Children">
            <summary>
            Gets a list of the children animation objects of this composite animation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation.#ctor">
            <summary>
            Initializes a new instance of the ScaleMoveAndFadeAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation.CreateMoveAnimation">
            <summary>
            Called in the constructor to create the default move animation.
            </summary>
            <returns>Returns a new instance of RadMoveAnimation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation.CreateScaleAnimation">
            <summary>
            Called in the constructor to create the default scale animation.
            </summary>
            <returns>Returns a new instance of RadScaleAnimation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation.CreateFadeAnimation">
            <summary>
            Called in the constructor to create the default fade animation.
            </summary>
            <returns>Returns a new instance of RadFadeAnimation.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation.ScaleAnimation">
            <summary>
            Gets the scale animation in this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation.MoveAnimation">
            <summary>
            Gets the move animation in this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleMoveAndFadeAnimation.FadeAnimation">
            <summary>
            Gets the fade animation in this group.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleYAnimation">
            <summary>
            This animation animates an element only on its Y axis.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleYAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadScaleYAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleYAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleYAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleYAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleYAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleYAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleYAnimation.StartScaleY">
            <summary>
            Gets or sets the start scale on the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleYAnimation.EndScaleY">
            <summary>
            Gets or sets the end scale on the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleYAnimation.ScaleX">
            <summary>
            Gets or sets a scale factor for X property of the scale transform.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleXAnimation">
            <summary>
            This animation animates an element only on its X axis.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleXAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadScaleXAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleXAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleXAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleXAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleXAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleXAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleXAnimation.StartScaleX">
            <summary>
            Gets or sets the start scale on the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleXAnimation.EndScaleX">
            <summary>
            Gets or sets the end scale on the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleXAnimation.ScaleY">
            <summary>
            Gets or sets a scale factor for Y property of the scale transform.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadEmptyAnimation">
            <summary>
            Empty animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animations.Helpers.ElementScreenShotInfo">
            <summary>
            Replaces an element with a screenshot and positions the screenshot in a popup, keeping the same location.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animations.Helpers.ElementScreenShotInfo.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Animations.Helpers.ElementScreenShotInfo"/> class.
            </summary>
            <param name="targetElement">The target element.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Animations.Helpers.ElementScreenShotInfo.OriginalOpacity">
            <summary>
            Gets or sets the original opacity.
            </summary>
            <value>The original opacity.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Animations.Helpers.ElementScreenShotInfo.OriginalLocation">
            <summary>
            Gets or sets the original location.
            </summary>
            <value>The original location.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Animations.Helpers.ElementScreenShotInfo.Popup">
            <summary>
            Gets or sets the popup.
            </summary>
            <value>The popup.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Animations.Helpers.ElementScreenShotInfo.ScreenShotContainer">
            <summary>
            Gets or sets the screen shot container.
            </summary>
            <value>The screen shot container.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTileAnimation">
            <summary>
            Provides an animation that sequentially animates items in a container. The end effect is
            similar to the animation of the homescreen on the Windows Phone OS.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTileAnimation.ContainerToAnimateProperty">
            <summary>
            Identifies the ContainerToAnimate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTileAnimation.ElementToDelayProperty">
            <summary>
            Identifies the ElementToDelay property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadTileAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.GetContainerToAnimate(System.Windows.DependencyObject)">
            <summary>
            Gets the ContainerToAnimate dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.SetContainerToAnimate(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
            <summary>
            Sets the ContainerToAnimate dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.GetElementToDelay(System.Windows.DependencyObject)">
            <summary>
            Gets the ElementToDelay dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.SetElementToDelay(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
            <summary>
            Sets the ElementToDelay dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileAnimation.OnEnded(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Fires the <see cref="E:Telerik.Windows.Controls.RadAnimation.Ended"/> event for the specific target provided
            in the <see cref="T:Telerik.Windows.Controls.Animation.PlayAnimationInfo"/> object.
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.InOutAnimationMode">
            <summary>
            Gets or sets the in out animation mode.
            </summary>
            <value>The in out animation mode.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.PerspectiveAngleY">
            <summary>
            Gets or sets the starting angle of the perspective rotation along the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.PerspectiveAngleX">
            <summary>
            Gets or sets the starting angle of the perspective rotation along the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.IsTranslationEnabled">
            <summary>
            Determines whether plane projection will be combined with a translate transform to enable the Turnstile effect.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.SequentialItemDelay">
            <summary>
            Gets or sets the delay between the items start animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.SequentialMode">
            <summary>
            Gets or sets the sequential mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.SelectedItemDelay">
            <summary>
            Gets or sets the selected item delay.
            </summary>
            <value>The selected item delay.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTileAnimation.ItemAnimationDuration">
            <summary>
            Gets or sets the duration of the item animation.
            </summary>
            <value>The duration of the item animation.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSlideContinuumAnimation">
            <summary>
            Provides an animation exact copy of the Windows Phone list based transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlideContinuumAnimation.HeaderElementProperty">
            <summary>
            Identifies the HeaderElement property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlideContinuumAnimation.ApplicationHeaderElementProperty">
            <summary>
            Identifies the ApplicationHeaderElement property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadSlideContinuumAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.GetHeaderElement(System.Windows.DependencyObject)">
            <summary>
            Gets the PageHeader dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.SetPageHeader(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
            <summary>
            Sets the PageHeader dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.GetApplicationHeaderElement(System.Windows.DependencyObject)">
            <summary>
            Gets the ApplicationHeaderElement dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.SetApplicationHeaderElement(System.Windows.DependencyObject,System.Windows.FrameworkElement)">
            <summary>
            Sets the ApplicationHeaderElement dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.OnStarted(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Called by the animation manager when the storyboard has been started.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideContinuumAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideContinuumAnimation.InOutAnimationMode">
            <summary>
            Gets or sets the in out animation mode.
            </summary>
            <value>The in out animation mode.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadMoveAndFadeAnimation">
            <summary>
            Provides a pre-defined move and fade animation group.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAndFadeAnimation.#ctor">
            <summary>
            Initializes a new instance of the RadMoveAndFadeAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAndFadeAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAndFadeAnimation.CreateMoveAnimation">
            <summary>
            Called in the constructor to create a default move animation.
            </summary>
            <returns>A new instance of RadMoveAnimation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAndFadeAnimation.CreateFadeAnimation">
            <summary>
            Called in the constructor to create a default fade animation.
            </summary>
            <returns>A new instance of RadFadeAnimation.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAndFadeAnimation.FadeAnimation">
            <summary>
            Gets or sets the start position for the move animation.
            If not set, the current element TranslateTransform is used if it exists, otherwise the empty point (0, 0) is used.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAndFadeAnimation.MoveAnimation">
            <summary>
            Gets or sets the end position for the move animation.
            If not set, the current element TranslateTransform is used if it exists, otherwise the empty point (0, 0) is used.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleAndFadeAnimation">
            <summary>
            Provides a pre-defined scale and fade animation group.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleAndFadeAnimation.#ctor">
            <summary>
            Initializes a new instance of the RadScaleAndFadeAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleAndFadeAnimation.CreateScaleAnimation">
            <summary>
            Called in the constructor to create the default scale animation.
            </summary>
            <returns>Returns a new instance of RadScaleAnimation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleAndFadeAnimation.CreateFadeAnimation">
            <summary>
            Called in the constructor to create the default fade animation.
            </summary>
            <returns>Returns a new instance of RadFadeAnimation.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAndFadeAnimation.ScaleAnimation">
            <summary>
            Gets the scale animation instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAndFadeAnimation.FadeAnimation">
            <summary>
            Gets the fade animation instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleAndMoveAnimation">
            <summary>
            Represents pre-defined animation group that moves and scales an element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleAndMoveAnimation.#ctor">
            <summary>
            Initializes a new instance of the RadScaleAndMoveAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleAndMoveAnimation.CreateMoveAnimation">
            <summary>
            Called in the constructor to create the default move animation.
            </summary>
            <returns>Returns a new instance of RadMoveAnimation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleAndMoveAnimation.CreateScaleAnimation">
            <summary>
            Called in the constructor to create the default scale animation.
            </summary>
            <returns>Returns a new instance of RadScaleAnimation.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAndMoveAnimation.ScaleAnimation">
            <summary>
            Gets the scale animation in this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAndMoveAnimation.MoveAnimation">
            <summary>
            Gets the move animation in this group.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation">
            <summary>
            Provides a pre-defined move, scale and rotate animation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation.#ctor">
            <summary>
            Initializes a new instance of the RadScaleMoveAndRotateAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation.CreateScaleAnimation">
            <summary>
            Called in the constructor to create the default scale animation.
            </summary>
            <returns>Returns a new instance of RadScaleAnimation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation.CreateMoveAnimation">
            <summary>
            Called in the constructor to create the default move animation.
            </summary>
            <returns>Returns a new instance of RadMoveAnimation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation.CreateRotateAnimation">
            <summary>
            Called in the constructor to create the default rotate animation.
            </summary>
            <returns>Returns a new instance of RadPerspectiveAnimation.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation.ScaleAnimation">
            <summary>
            Gets the scale animation for this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation.MoveAnimation">
            <summary>
            Gets the move animation for this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleMoveAndRotateAnimation.RotateAnimation">
            <summary>
            Gets the rotate animation for this group.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.SequentialMode">
            <summary>
            Specifies the direction of the animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.SequentialMode.LastToFirst">
            <summary>
            The sequential animation starts from the last item and ends with the first item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.SequentialMode.FirstToLast">
            <summary>
            The sequential animation starts from the first item and ends with the last item.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.InOutAnimationMode">
            <summary>
            Specifies the direction of the animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.InOutAnimationMode.In">
            <summary>
            The animation animates an element that appears.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.InOutAnimationMode.Out">
            <summary>
            The animation animates an element that disappears.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationExtensions">
            <summary>
            Provides extension methods related to the Telerik Silverlight Animation Framework.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.AnimationFillBehavior">
            <summary>
            Defines the fill behavior for a <see cref="T:Telerik.Windows.Controls.RadAnimation"/> instance.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.AnimationFillBehavior.Inherit">
            <summary>
            The behavior is inherited either from a parent <see cref="T:Telerik.Windows.Controls.RadAnimationGroup"/> or the associated Storyboard.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.AnimationFillBehavior.HoldEnd">
            <summary>
            Same as <see cref="T:System.Windows.Media.Animation.FillBehavior.HoldEnd"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.AnimationFillBehavior.Stop">
            <summary>
            Same as <see cref="T:System.Windows.Media.Animation.FillBehavior.Stop"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadAnimationManager">
            <summary>
            Static manager class used for dynamic animations of controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadAnimationManager.AnimationSelectorProperty">
            <summary>
            Represents the AnimationSelector attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadAnimationManager.IsAnimationEnabledProperty">
            <summary>
            Identifies the IsAnimationEnabled attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadAnimationManager.AnimationInfoProperty">
            <summary>
            Identifies the Animation attached property.
            </summary>
            <remarks>
            	<para>
            		This property is used to bind the corresponding RadAnimation to a storyboard.
            	</para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.GetAnimationSelector(System.Windows.DependencyObject)">
            <summary>
            Gets the AnimationSelector for the given DependencyObject, normally a control.
            </summary>
            <param name="obj">The target animated object, normally a control.</param>
            <returns>The animation selector for the object.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.SetAnimationSelector(System.Windows.DependencyObject,Telerik.Windows.Controls.Animation.AnimationSelectorBase)">
            <summary>
            Sets the Animation selector for the given DependencyObject, normally a Control.
            </summary>
            <param name="obj">The target animated object, normally a control.</param>
            <param name="value">The AnimationSelector to assign.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.GetIsAnimationEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether animation is enabled for the given Control.
            </summary>
            <param name="obj">The dependency object for which to check the value, normally a control.</param>
            <returns>True if animation is enabled, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.SetIsAnimationEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value indicating whether animation is enabled for the given Control.
            </summary>
            <param name="obj">The dependency object for which to check the value, normally a control.</param>
            <param name="value">True if animation should be enabled, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.CanAnimate(System.Windows.DependencyObject)">
            <summary>
            Determines whether animation is supported for the specified element.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.Stop(System.Windows.UIElement,Telerik.Windows.Controls.RadAnimation)">
            <summary>
            Stops an animation if it is currently active or filling.
            </summary>
            <param name="target">The control to stop the animation for.</param>
            <param name="animation">The animation to stop.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.StopIfRunning(System.Windows.UIElement,Telerik.Windows.Controls.RadAnimation)">
            <summary>
            Stops an animation if it is currently active or filling.
            </summary>
            <param name="target">The target that is being animated.</param>
            <param name="animation">The animation to stop if running.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.IsAnimationRunning(System.Windows.UIElement,Telerik.Windows.Controls.RadAnimation)">
            <summary>
            Determines if the provided animation is running on the specified target.
            </summary>
            <param name="target">The target of the animation.</param>
            <param name="animation">The animation to check if it is running or not.</param>
            <returns>Returns true if the animation is animating the target and false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.Play(System.Windows.UIElement,Telerik.Windows.Controls.RadAnimation)">
            <summary>
            Plays the provides animation on the specified target.
            </summary>
            <param name="target">The <see cref="T:System.Windows.UIElement"/> instance to be animated.</param>
            <param name="animation">The <see cref="T:Telerik.Windows.Controls.RadAnimation"/> instance that describes the animation process.</param>
            <returns>True if the animation has been successfully executed, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.Play(System.Windows.UIElement,Telerik.Windows.Controls.RadAnimation,System.Action)">
            <summary>
            Plays the provides animation on the specified target.
            </summary>
            <param name="target">The <see cref="T:System.Windows.UIElement"/> instance to be animated.</param>
            <param name="animation">The <see cref="T:Telerik.Windows.Controls.RadAnimation"/> instance that describes the animation process.</param>
            <param name="completedCallback">Optional callback to notify the caller for animation completion.</param>
            <returns>True if the animation has been successfully executed, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationManager.IsAnimationScheduled(System.Windows.UIElement,Telerik.Windows.Controls.RadAnimation)">
            <summary>
            Returns a boolean value determining whether an animation has been scheduled for the given <see cref="T:System.Windows.UIElement"/>.
            </summary>
            <param name="element">The <see cref="T:System.Windows.UIElement"/> instance for which to check whether the given <see cref="T:Telerik.Windows.Controls.RadAnimation"/> is scheduled.</param>
            <param name="animation">The <see cref="T:Telerik.Windows.Controls.RadAnimation"/> instance for which to check whether it has been scheduled for the given <see cref="T:System.Windows.UIElement"/>.</param>
            <returns>True if an animation is scheduled for the element, otherwise false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimationManager.IsGlobalAnimationEnabled">
            <summary>
            Gets or sets a value indicating whether the Animation for the whole application will be enabled. 
            This value overrides all other properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimationManager.SpeedRatio">
            <summary>
            Gets or sets the global animation speed ration that will be used if no local speed ratio is set.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadAnimationSelector">
            <summary>
            Animation Selector, used for easier definition of animations in xaml.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationSelectorBase">
            <summary>
            Base class for selecting DynamicAnimations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationSelectorBase.SelectAnimation(System.Windows.UIElement,System.String)">
            <summary>
            	<para>
            		When overridden in derived classes, it selects an animation for the specific
            		control and reason.
            	</para>
            </summary>
            <param name="control">The control the animation is needed for.</param>
            <param name="name">The reason for the animation. Often it is a change of state, result of a user action.</param>
            <returns>The RadAnimation object.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadAnimationSelector"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimationSelector.SelectAnimation(System.Windows.UIElement,System.String)">
            <summary>
            Selects an animation based on its AnimationName.
            </summary>
            <remarks>
            	<para>
            		The AnimationSelector will return the animation with matching name from
            		its <strong>Animations</strong> list.
            	</para>
            </remarks>
            <param name="control">The control the animation is needed for.</param>
            <param name="name">The name of the animation. Often it is a change of state, result of a user action.</param>
            <returns>The RadAnimation object.</returns>
            <seealso cref="P:Telerik.Windows.Controls.RadAnimationSelector.Animations"/>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimationSelector.Animations">
            <summary>
            Gets the list of animations in that this selector will choose from.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadFadeAnimation">
            <summary>
            Fade animation for showing/hiding elements.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFadeAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadFadeAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFadeAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFadeAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFadeAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFadeAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFadeAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFadeAnimation.StartOpacity">
            <summary>
            Gets or sets a value from which the animation will start.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFadeAnimation.EndOpacity">
            <summary>
            Gets or sets a value will be applied when the animation finishes.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadMoveAnimation">
            <summary>
            Moves the target element from a start point to an end point.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadMoveAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAnimation.GetPoint(System.Windows.UIElement,System.Nullable{System.Windows.Point})">
            <summary>
            Gets the value of a nullable point if it is not null. If it is null it returns a point that represents the X and Y
            components of the target's TranslateTransform.
            </summary>
            <param name="target">The target from which to obtain a point if the provided point is null.</param>
            <param name="point">A nullable point.</param>
            <returns>Returns the value of a nullable point if it is not null. If it is null it returns a point that represents the X and Y
            components of the target's TranslateTransform.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAnimation.GetOppositeDirection(Telerik.Windows.Controls.MoveDirection)">
            <summary>
            Gets the move direction value, opposite (mirrored) to the specified one.
            </summary>
            <param name="direction">The direction which opposite value should be calculated.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadMoveAnimation.GetStartEndPoints(System.Windows.FrameworkElement)">
            <summary>
            Sets the start and end point arguments based on the current MoveDirection value.
            </summary>
            <param name="element">The target which is required in order to determine the move length. The move length is equal to the render size of target.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAnimation.MiddlePointsXAxis">
            <summary>
            Gets or sets the middle points of the X animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAnimation.MiddlePointsYAxis">
            <summary>
            Gets or sets the middle points of the Y animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAnimation.MoveDirection">
            <summary>
            Gets or sets a value that describes from to where the animated element should move.
            For more precise control use the StartPoint and EndPoint and set MoveDirection to null.
            Move direction has precedence over StartPoint and EndPoint.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAnimation.StartPoint">
            <summary>
            Gets or sets the start position for the animation.
            If not set, the current element TranslateTransform (if any) is used or an empty Point - that is [0,0].
            If MoveDirection is set this property is disregarded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAnimation.EndPoint">
            <summary>
            Gets or sets the end position of the animation.
            If not set, the current element TranslateTransform (if any) is used or an empty Point - that is [0,0].
            If MoveDirection is set this property is disregarded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAnimation.PointMode">
            <summary>
            Gets or sets a value that determines how the move animation's start and end points will be interpreted.
            Absolute means that they will be interpreted as pixels and Relative means that they will interpreted as
            points in the [-1, 1] range.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadMoveAnimation.Duration">
            <summary>
            Gets or sets the duration of the animation. Defaults to (0:0:.4) - 400 milliseconds.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ReverseMode">
            <summary>
            This enum can be used to obtain a partially reversed perspective animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ReverseMode.StartEndAngles">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ReverseMode.RotationDirection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PerspectiveAnimationAxis">
            <summary>
            Predefined possible axes in the perspective animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationAxis.X">
            <summary>
            The X axis.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationAxis.Y">
            <summary>
            The Y axis.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationAxis.Z">
            <summary>
            The Z axis.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationAxis.XY">
            <summary>
            Both X and Y axis.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationAxis.XZ">
            <summary>
            Both X and Z axis.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationAxis.YZ">
            <summary>
            Both Y and Z axis.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationAxis.All">
            <summary>
            All axes.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PerspectiveAnimationDirection">
            <summary>
            Defines the direction of a perspective animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationDirection.Clockwise">
            <summary>
            Animation is clock-wise orientated.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PerspectiveAnimationDirection.CounterClockwise">
            <summary>
            Animation is counter clock-wise orientated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadPlaneProjectionAnimation">
            <summary>
            Defines animation that changes the perspective of the target element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPlaneProjectionAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadPlaneProjectionAnimation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPlaneProjectionAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPlaneProjectionAnimation.CreateOpposite(Telerik.Windows.Controls.ReverseMode)">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPlaneProjectionAnimation.ClearAnimation(System.Windows.UIElement)">
            <summary>
            Removes any property modifications, applied to the specified element by this instance.
            </summary>
            <param name="target">The element which property values are to be cleared.</param>
            <remarks>
            It is assumed that the element has been previously animated by this animation.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPlaneProjectionAnimation.ApplyInitialValues(System.Windows.UIElement)">
            <summary>
            Sets the initial animation values to the provided target element.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPlaneProjectionAnimation.ApplyAnimationValues(Telerik.Windows.Controls.Animation.PlayAnimationInfo)">
            <summary>
            Applies already stored (if any) animated values.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPlaneProjectionAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">The context that holds information about the animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.StartAngleX">
            <summary>
            Gets or sets the starting angle of the perspective rotation along the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.EndAngleX">
            <summary>
            Gets or sets the end angle of the perspective rotation along the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.StartAngleY">
            <summary>
            Gets or sets the starting angle of the perspective rotation along the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.EndAngleY">
            <summary>
            Gets or sets the end angle of the perspective rotation along the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.StartAngleZ">
            <summary>
            Gets or sets the starting angle of the perspective rotation along the Z axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.EndAngleZ">
            <summary>
            Gets or sets the end angle of the perspective rotation along the Z axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.CenterX">
            <summary>
            Gets or sets the center of the rotation along the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.CenterY">
            <summary>
            Gets or sets the center of the rotation along the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.CenterZ">
            <summary>
            Gets or sets the center of the rotation along the Z axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.Axes">
            <summary>
            Gets or sets the axes along which rotation should occur.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPlaneProjectionAnimation.Direction">
            <summary>
            Gets or sets the direction of the animation.
            That is the rotation direction - clockwise or counter-clockwise.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadResizeAnimation">
            <summary>
            Animation for smooth resizing elements.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadResizeAnimation.#ctor">
            <summary>
            Initializes a new instance of the RadResizeAnimation class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeAnimation.StartSize">
            <summary>
            Gets or sets the Size structure that defines the initial size. If no value is applied current element size is used.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeAnimation.EndSize">
            <summary>
            Gets or sets the final size of the animated element. If no value is applied current element size is used.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadResizeAnimation.Duration">
            <summary>
            Gets or sets the duration of the animation. Defaults to (0:0:.4) - 400 milliseconds.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleAnimation">
            <summary>
            Scale animation for showing/hiding elements.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadScaleAnimation"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.Duration">
            <summary>
            Gets or sets the duration of the scale animation. The value of
            this property will be set as the value of DurationX and DurationY.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.AnimationOrigin">
            <summary>
            Gets or sets the render transform origin of the animated element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.DurationX">
            <summary>
            Gets or sets the duration of the X animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.DurationY">
            <summary>
            Gets or sets the duration of the Y animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.StartScaleX">
            <summary>
            Gets or sets the start scale on the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.EndScaleX">
            <summary>
            Gets or sets the end scale on the X axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.StartScaleY">
            <summary>
            Gets or sets the start scale on the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadScaleAnimation.EndScaleY">
            <summary>
            Gets or sets the end scale on the Y axis.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSlideAnimation">
            <summary>
            Slides the target element from a start point to an end point.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideAnimation.#ctor">
            <summary>
            Initializes a new instance of the RadSlideAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideAnimation.CreateOpposite">
            <summary>
            Creates a new instance of this animation that is the reverse of this instance.
            </summary>
            <returns>A new instance of this animation that is the reverse of this instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideAnimation.UpdateAnimationOverride(Telerik.Windows.Controls.Animation.AnimationContext)">
            <summary>
            Core update routine.
            </summary>
            <param name="context">An AnimationContext that provides internal animation information.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.Easings">
            <summary>
            Helper class, used for creating animations in code.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.Easings.BaseEase.Ease(System.Double)">
            <summary>
            Transforms normalized time to control the pace of an animation.
            </summary>
            <param name="normalizedTime"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.Easings.BaseEase.F(System.Double)">
            <summary>
            F(t).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.Easings.BaseEase.EasingMode">
            <summary>
            Gets or sets a value that specifies how the animation interpolates. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.PlayAnimationInfo">
            <summary>
            Encapsulates information for an RadAnimationManager.Play pass.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.PlayAnimationInfo.#ctor(System.Windows.Media.Animation.Storyboard,Telerik.Windows.Controls.RadAnimation,System.Windows.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Animation.PlayAnimationInfo"/> class.
            </summary>
            <param name="storyboard">The storyboard.</param>
            <param name="animation">The animation.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.PlayAnimationInfo.GetAnimatedValues(Telerik.Windows.Controls.RadAnimation)">
            <summary>
            Gets previously stored array of values for the specified animation.
            </summary>
            <param name="animation">The animation which values are to be retrieved.</param>
            <returns>An array of values, stored by the specified animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.PlayAnimationInfo.SetAnimatedValues(Telerik.Windows.Controls.RadAnimation,System.Object[])">
            <summary>
            Records an array of values for the specified animation.
            </summary>
            <param name="animation">The animation which provides the values.</param>
            <param name="values">The values to be stored.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.PlayAnimationInfo.Storyboard">
            <summary>
            Gets the <see cref="P:Telerik.Windows.Controls.Animation.PlayAnimationInfo.Storyboard"/> instance associated with this play pass.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.PlayAnimationInfo.Animation">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Controls.RadAnimation"/> instance associated with this play pass.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.PlayAnimationInfo.Target">
            <summary>
            Gets the <see cref="T:System.Windows.FrameworkElement"/> instance associated with this play pass.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.PlayAnimationInfo.TargetHashCode">
            <summary>
            Gets the hash code of the animation target.
            </summary>
            <remarks>
            Since the target is a weak reference it can be garbage collected before we
            get its hash code for resource cleanup. See AnimationManager.RemoveAnimationInfo().
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.AppointmentSource">
            <summary>
            Defines basic logic for retrieving a collection of IAppointment objects.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.AppointmentSource.GetAppointments(System.Func{Telerik.Windows.Controls.IAppointment,System.Boolean})">
            <summary>
            Creates a collection of IAppointment objects based on an appointment predicate.
            </summary>
            <param name="appointmentFilter">A predicate that determines which appointments will be present in the resulting collection.</param>
            <returns>Returns a collection of IAppointment objects.</returns>
            <remarks>
            Inheritors must populate the AllAppointments list, otherwise this method will always return an empty collection.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.AppointmentSource.FetchData(System.DateTime,System.DateTime)">
            <summary>
            An abstract method that inheritors must implement in order to
            fetch new appointments from the native appointment source.
            </summary>
            <param name="startDate">The start date for the new appointments.</param>
            <param name="endDate">The end date for the new appointments.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.AppointmentSource.OnDataLoaded">
            <summary>
            A method that must be called after the FetchData operation is finished.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.AppointmentSource.DataLoaded">
            <summary>
            Occurs when appointment data has been loaded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.AppointmentSource.AllAppointments">
            <summary>
            Gets a list of all the appointments from the real data source wrapped in IAppointment objects.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DateTimeAppointment">
            <summary>
            A base Appointment class that implements IAppointment.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.IAppointment">
            <summary>
            An interface that defines the minimum properties that an appointment can have.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IAppointment.StartDate">
            <summary>
            Gets the start date of the appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IAppointment.EndDate">
            <summary>
            Gets the end date of the appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IAppointment.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="M:Telerik.Windows.Controls.DateTimeAppointment.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the DateTimeAppointment class.
            </summary>
            <param name="start">The start date of the appointment.</param>
            <param name="end">The end date of the appointment.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DateTimeAppointment.#ctor(System.DateTime,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the DateTimeAppointment class.
            </summary>
            <param name="start">The start date of the appointment.</param>
            <param name="end">The end date of the appointment.</param>
            <param name="description">The appointment description.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.DateTimeAppointment.StartDate">
            <summary>
            Gets the start date of this appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DateTimeAppointment.EndDate">
            <summary>
            Gets the end date of this appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DateTimeAppointment.Description">
            <summary>
            Gets the description of this appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DateTimeAppointment.Subject">
            <summary>
            Gets the description of this appointment.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ApplicationUsageHelper">
            <summary>
            Provides data about the application usage.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationUsageHelper.Init(System.String)">
            <summary>
            Initializes the data. Call this method when the application is launching.
            </summary>
            <remarks>
            It is mandatory to call this method before using any property.
            </remarks>
            <seealso cref="M:Telerik.Windows.Controls.ApplicationUsageHelper.OnApplicationActivated"/>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationUsageHelper.OnApplicationActivated">
            <summary>
            Initializes the data when application is re-activated. Call this method when application is reactivated.
            </summary>
            <seealso cref="M:Telerik.Windows.Controls.ApplicationUsageHelper.Init(System.String)"/>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationUsageHelper.InitialInstallationDate">
            <summary>
            Gets initial installation date.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationUsageHelper.LastApplicationVersion">
            <summary>
            Gets initial installation date.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationUsageHelper.CurrentVersionInstallationDate">
            <summary>
            Gets date when the last application update was installed.
            </summary>
            <remarks>
            Application update is recognized when the application version is changed.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationUsageHelper.PreviousRunDate">
            <summary>
            Gets date when the application was previously started.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationRunsCountForCurrentVersion">
            <summary>
            Gets the number of application runs after the last application update.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationRunsCountTotal">
            <summary>
            Gets the number of application runs after the initial installation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel">
            <summary>
            Data model for the ApplicationUsageHelper.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.InitialInstallationDate">
            <summary>
            Gets or sets the first the application was installed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.CurrentVersionInstallationDate">
            <summary>
            Gets or sets the installation date with current version was installed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.PreviousRunDate">
            <summary>
            Gets or sets the date when the application was previously run.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.ApplicationRunsCountForCurrentVersion">
            <summary>
            Gets or sets the count of application runs of the current version.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.ApplicationRunsCountTotal">
            <summary>
            Gets or sets the count of application runs since the initial install.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.LastApplicationVersion">
            <summary>
            Gets or sets the previous application version.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationUsageHelper.ApplicationUsageDataModel.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.BitStateChangedEventArgs">
            <summary>
            Encapsulates the data, associated with a change in the bit state of a <see cref="T:Telerik.Windows.Controls.DisposableObject"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BitStateChangedEventArgs.#ctor(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.BitStateChangedEventArgs"/> class.
            </summary>
            <param name="key">The key that defines the changed bit.</param>
            <param name="oldValue">The previous value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.BitStateChangedEventArgs.Key">
            <summary>
            Gets the key that defines the changed bit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.BitStateChangedEventArgs.OldValue">
            <summary>
            Gets the previous value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.BitStateChangedEventArgs.NewValue">
            <summary>
            Gets the new value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.BitVector32">
            <summary>
            A simple structure that uses the bits of a <see cref="T:System.UInt32"/> structure to define boolean values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BitVector32.#ctor(Telerik.Windows.Controls.BitVector32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.BitVector32"/> struct using the raw data specified by the provided source vector.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.BitVector32.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.BitVector32"/> struct.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.BitVector32.op_Equality(Telerik.Windows.Controls.BitVector32,Telerik.Windows.Controls.BitVector32)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="vector1">The vector1.</param>
            <param name="vector2">The vector2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BitVector32.op_Inequality(Telerik.Windows.Controls.BitVector32,Telerik.Windows.Controls.BitVector32)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="vector1">The vector1.</param>
            <param name="vector2">The vector2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BitVector32.Reset">
            <summary>
            Clears all currently set bits in this vector.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BitVector32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BitVector32.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.BitVector32.Data">
            <summary>
            Gets the UInt32 structure holding the separate bits of the vector.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.BitVector32.Item(System.UInt32)">
            <summary>
            Determines whether the bit, corresponding to the specified key is set.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ChildrenOfTypeExtensions">
            <summary>
            Contains extension methods for enumerating the children of an element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ChildrenOfTypeExtensions.ChildrenOfType``1(System.Windows.DependencyObject)">
            <summary>
            Gets all child elements recursively from the visual tree by given type.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ChildrenOfTypeExtensions.FindChildByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds child element of the specified type. Uses breadth-first search.
            </summary>
            <typeparam name="T">
            The type of the child that will be searched in the object hierarchy. The type should be <see cref="T:System.Windows.DependencyObject"/>.
            </typeparam>
            <param name="element">The target <see cref="T:System.Windows.DependencyObject"/> which children will be traversed.</param>
            <returns>The first child element that is of the specified type.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ChildrenOfTypeExtensions.GetFirstDescendantOfType``1(System.Windows.DependencyObject)">
            <summary>
            Does a deep search of the element tree, trying to find a descendant of the given type 
            (including the element itself).
            </summary>
            <returns>True if the target is one of the elements.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ChildrenOfTypeExtensions.GetChildrenRecursive(System.Windows.DependencyObject)">
            <summary>
            Enumerates through element's children in the visual tree.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DataTemplateSelector">
            <summary>
            Provides a way to choose a DataTemplate based on the data object and the data-bound element.
            </summary>
            <remarks>
            <para>
            Typically, you create a DataTemplateSelector when you have more than one DataTemplate for the same type of objects and you want to supply your own logic to choose a DataTemplate to apply based on the properties of each data object.
            </para>
            <para>
            To create a template selector, create a class that inherits from DataTemplateSelector and override the SelectTemplate method. Once your class is defined you can assign an instance of the class to the template selector property of your element.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a DataTemplate based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DependencyObjectExtensions">
            <summary>
            DependencyObject extension methods.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DependencyObjectExtensions.IsLocalValueSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Determines whether the specified dependency property local value is set.
            </summary>
            <seealso cref="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)"/>
            <param name="dependencyObject">The dependency object.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DisposableObject">
            <summary>
            Represents an object that implements the <see cref="T:System.IDisposable"/> interface and automatically releases any events, attached to this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SuspendableObject">
            <summary>
            Represents the abstract definition of an object which may be suspended. That is to prevent it from preforming certain functionality until resumed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SuspendableObject.Suspend">
            <summary>
            Temporarily suspends this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SuspendableObject.Resume">
            <summary>
            Resumes this instance (allows certain functionality to be performed).
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SuspendableObject.Resume(System.Boolean)">
            <summary>
            Resumes this instance (allows certain functionality to be performed).
            </summary>
            <param name="update">True to perform update after resuming.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.SuspendableObject.SuspendOverride">
            <summary>
            Allows inheritors to perform additional logic upon suspend.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SuspendableObject.OnResumed(System.Boolean)">
            <summary>
            Notifies that this instance is no longer suspended.
            Allows inheritors to provide their own update logic.
            </summary>
            <param name="update">True if an Update is requested, false otherwise.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.SuspendableObject.IsSuspended">
            <summary>
            Determines whether this instance is currently suspended.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DisposableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DisposableObject"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DisposableObject.Dispose">
            <summary>
            Releases all resources, used by this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DisposableObject.SetBitState(System.UInt32,System.Boolean)">
            <summary>
            Updates the specified bit, determined by the supplied key, depending on the value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.DisposableObject.OnBitStateChanged(Telerik.Windows.Controls.BitStateChangedEventArgs)">
            <summary>
            Notifies for a change in the current bit state of this instance.
            </summary>
            <param name="e">The arguments, associated with the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DisposableObject.DisposeManagedResources">
            <summary>
            Disposes all managed resources allocated by this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DisposableObject.CollectEvents(System.Collections.Generic.List{System.Delegate})">
            <summary>
            Gets all the events, exposed by this instance. Used to clean-up event subscriptions upon disposal.
            </summary>
            <param name="events"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.DisposableObject.DisposeUnmanagedResources">
            <summary>
            
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DisposableObject.Disposing">
            <summary>
            Raised when the object enters its Dispose routine.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DisposableObject.Disposed">
            <summary>
            Raised when the object has finished its Dispose routine.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DisposableObject.IsDisposing">
            <summary>
            Determines whether the object is currently in a Dispose cycle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DisposableObject.IsDisposed">
            <summary>
            Determines whether the object is already disposed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DisposableObject.Item(System.UInt32)">
            <summary>
            Directly gets or sets the bit, determined by the specified key.
            Use the SetBitState method to receive a Changed notification as appropriate.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.EmptyEnumerator">
            <summary>
            Represents an empty enumerator, used by an empty <see cref="T:Telerik.Windows.Data.RadListSource"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.EmptyEnumerator.MoveNext">
            <summary>
            Attempts to advance the current item to the next one.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.EmptyEnumerator.Reset">
            <summary>
            Attempts to reset the enumerator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.EmptyEnumerator.Current">
            <summary>
            Gets the current item of the enumerator.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemPropertyChangedEventArgs">
            <summary>
            Encapsulates the data, associated with a single item property change within a <see cref="T:Telerik.Windows.Data.RadListSource"/> collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemPropertyChangedEventArgs.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ItemPropertyChangedEventArgs"/> class.
            </summary>
            <param name="item">The item which property has changed.</param>
            <param name="propName">The name of the property.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemPropertyChangedEventArgs.Item">
            <summary>
            Gets the raw data item instance which property has changed.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Pair`2">
            <summary>
            A utility class that holds a pair of objects of arbitrary types.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Pair class.
            </summary>
            <param name="first">The object for First.</param>
            <param name="second">The object for Second.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Pair`2.First">
            <summary>
            Gets or sets the first object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Pair`2.Second">
            <summary>
            Gets or sets the second object.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PngEncoder.Adler32">
            <summary>
            Computes the Adler32 CRC value for a given data set.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.Adler">
            <summary>
            Returns the current running Adler32 result.
            </summary>
            <returns>An unsigned 32bit integer representing the current Adler32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.Adler(System.Byte[])">
            <summary>
            Returns the current running Adler32 result.
            </summary>
            <param name="data">A byte[] to process.</param>
            <returns>An unsigned 32bit integer representing the current Adler32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.Adler(System.Byte[],System.Int32)">
            <summary>
            Returns the current running Adler32 result.
            </summary>
            <param name="data">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
            <returns>An unsigned 32bit integer representing the current Adler32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.Adler(System.Byte[],System.Int32,System.UInt32)">
            <summary>
            Returns the current running Adler32 result.
            </summary>
            <param name="data">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
            <param name="offset">The offset to start processing byte[] at.</param>
            <returns>An unsigned 32bit integer representing the current Adler32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.AddToAdler(System.Byte[])">
            <summary>
            Adds to the current running Adler32 the bytes from buf[].
            </summary>
            <param name="data">A byte[] to process.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.AddToAdler(System.Byte[],System.Int32)">
            <summary>
            Adds to the current running Adler32 the bytes from buf[].
            </summary>
            <param name="data">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.AddToAdler(System.Byte[],System.Int32,System.UInt32)">
            <summary>
            Adds to the current running Adler32 the bytes from buf[].
            </summary>
            <param name="data">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
            <param name="offset">The offset to start processing byte[] at.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.Adler32.ResetAdler">
            <summary>
            Resets the running Adler32.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PngEncoder.CRC32">
            <summary>
            Computes the CRC32 value for a given data set.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.MakeCRCTable">
            <summary>
            Populates the CRC32 checksum values for every byte.  This should only be called
            if you are using this library on a non-standard platform that uses some kind of
            weird binary encoding of bytes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.Crc">
            <summary>
            Returns the current running CRC32 result for a PNG file.
            </summary>
            <returns>An unsigned 32bit integer representing the current CRC32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.Crc(System.Byte[])">
            <summary>
            Returns the current running CRC32 result for a PNG file.
            </summary>
            <param name="buf">A byte[] to process.</param>
            <returns>An unsigned 32bit integer representing the CRC32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.Crc(System.Byte[],System.Int32)">
            <summary>
            Returns the current running CRC32 result for a PNG file.
            </summary>
            <param name="buf">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
            <returns>An unsigned 32bit integer representing the CRC32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.Crc(System.Byte[],System.Int32,System.UInt32)">
            <summary>
            Returns the current running CRC32 result for a PNG file.
            </summary>
            <param name="buf">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
            <param name="offset">The offset to start processing byte[] at.</param>
            <returns>An unsigned 32bit integer representing the CRC32.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.AddToCRC(System.Byte[])">
            <summary>
            Adds to the current running CRC32 the bytes from buf[].
            </summary>
            <param name="buf">A byte[] to process.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.AddToCRC(System.Byte[],System.Int32)">
            <summary>
            Adds to the current running CRC32 the bytes from buf[].
            </summary>
            <param name="buf">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.AddToCRC(System.Byte[],System.Int32,System.UInt32)">
            <summary>
            Adds to the current running CRC32 the bytes from buf[].
            </summary>
            <param name="buf">A byte[] to process.</param>
            <param name="len">The length of the byte[].</param>
            <param name="offset">The offset to start processing byte[] at.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.CRC32.ResetCRC">
            <summary>
            Resets the running CRC32.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.Header">
            <summary>
            The first chunk in a png file. Can only exists once. Contains 
            common information like the width and the height of the image or
            the used compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.Palette">
            <summary>
            The PLTE chunk contains from 1 to 256 palette entries, each a three byte
            series in the RGB format.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.Data">
            <summary>
            The IDAT chunk contains the actual image data. The image can contains more
            than one chunk of this type. All chunks together are the whole image.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.End">
            <summary>
            This chunk must appear last. It marks the end of the PNG datastream. 
            The chunk's data field is empty. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.PaletteAlpha">
            <summary>
            This chunk specifies that the image uses simple transparency: 
            either alpha values associated with palette entries (for indexed-color images) 
            or a single transparent color (for grayscale and truecolor images). 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.Text">
            <summary>
            Textual information that the encoder wishes to record with the image can be stored in 
            tEXt chunks. Each tEXt chunk contains a keyword and a text string.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.Gamma">
            <summary>
            This chunk specifies the relationship between the image samples and the desired 
            display output intensity.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngChunkTypes.Physical">
            <summary>
            The pHYs chunk specifies the intended pixel size or aspect ratio for display of the image. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngHeader.Width">
            <summary>
            The dimension in x-direction of the image in pixels.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngHeader.Height">
            <summary>
            The dimension in y-direction of the image in pixels.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngHeader.BitDepth">
            <summary>
            Bit depth is a single-byte integer giving the number of bits per sample 
            or per palette index (not per pixel). Valid values are 1, 2, 4, 8, and 16, 
            although not all values are allowed for all color types. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngHeader.ColorType">
            <summary>
            Color type is a integer that describes the interpretation of the 
            image data. Color type codes represent sums of the following values: 
            1 (palette used), 2 (color used), and 4 (alpha channel used).
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngHeader.CompressionMethod">
            <summary>
            Indicates the method  used to compress the image data. At present, 
            only compression method 0 (deflate/inflate compression with a sliding 
            window of at most 32768 bytes) is defined.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngHeader.FilterMethod">
            <summary>
            Indicates the preprocessing method applied to the image 
            data before compression. At present, only filter method 0 
            (adaptive filtering with five basic filter types) is defined.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PngEncoder.PngHeader.InterlaceMethod">
            <summary>
            Indicates the transmission order of the image data. 
            Two values are currently defined: 0 (no interlace) or 1 (Adam7 interlace).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PngEncoder.PNGWriter">
            <summary>
            WriteableBitmap Extensions for PNG Writing.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.PNGWriter.DetectWBByteOrder">
            <summary>
            Detects the color order of a stored byte array.  Byte order may change between platforms, you should call this once before writting a PNG or if you have any issues with colors changing.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.PNGWriter.WritePNG(System.Windows.Media.Imaging.WriteableBitmap,System.IO.Stream)">
            <summary>
            Write and PNG file out to a file stream.  Currently compression is not supported.
            </summary>
            <param name="image">The WriteableBitmap to work on.</param>
            <param name="stream">The destination file stream.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PngEncoder.PNGWriter.WritePNG(System.Windows.Media.Imaging.WriteableBitmap,System.IO.Stream,System.Int32)">
            <summary>
            Write and PNG file out to a file stream.  Currently compression is not supported.
            </summary>
            <param name="image">The WriteableBitmap to work on.</param>
            <param name="stream">The destination file stream.</param>
            <param name="compression">Level of compression to use (-1=auto, 0=none, 1-100 is percentage).</param>
        </member>
        <member name="T:Telerik.Windows.Controls.TreeTraversalMode">
            <summary>
            Defines possible approaches when traversing a tree.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TreeTraversalMode.DepthFirst">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TreeTraversalMode.BreadthFirst">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.BoolToVisibilityConverter">
            <summary>
            Converts boolean values to <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display
            in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type" /> of data expected by
            the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This
            method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay" />
            bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type" /> of data expected by
            the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Converters.StringToDoubleConverter">
            <summary>
            Represents a value converter that converts strings into double values by using the double.TryParse method.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:Telerik.Windows.Data.CurrencyManagementMode">
            <summary>
            Specifies the mode used by a <see cref="T:Telerik.Windows.Data.ICurrencyManager"/> instance to update its <see cref="P:Telerik.Windows.Data.ICurrencyManager.CurrentItem"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.CurrencyManagementMode.None">
            <summary>
            Current item is not managed at all. Useful for optimization purposes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.CurrencyManagementMode.Local">
            <summary>
            The default mode. That is local current item will be managed only.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.CurrencyManagementMode.LocalAndExternal">
            <summary>
            Local and external currencies will be synchronized together.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.CurrentItemChangingEventArgs">
            <summary>
            Encapsulates the data associated with a <see cref="E:Telerik.Windows.Data.RadListSource.CurrentItemChanging"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.CurrentItemChangingEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CurrentItemChangingEventArgs"/> class.
            </summary>
            <param name="newCurrent">The item that is about to be come the new current one.</param>
            <param name="cancelable">True if the event may be canceled, false otherwise.</param>
        </member>
        <member name="P:Telerik.Windows.Data.CurrentItemChangingEventArgs.NewCurrentItem">
            <summary>
            Gets the item that is about to become the new current one.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.CurrentItemChangingEventArgs.Cancelable">
            <summary>
            Determines whether the event may be canceled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.CurrentItemChangingEventArgs.Cancel">
            <summary>
            Determines whether the event should be canceled.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.DataGroup">
            <summary>
            Represents a group of items, created upon a grouping data operation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.DataGroup.#ctor(System.Object,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.DataGroup"/> class.
            </summary>
            <param name="key">The key of the group.</param>
            <param name="items">The child items of the group.</param>
        </member>
        <member name="M:Telerik.Windows.Data.DataGroup.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.DataGroup.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.DataGroup.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.DataGroup.GetEnumerator">
            <summary>
            Gets the <see cref="T:System.Collections.IEnumerator"/> instance that allows iterating through all child items.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.DataGroup.FormatString">
            <summary>
            Gets the string used to format the display text for this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataGroup.HasChildGroups">
            <summary>
            Determines whether this group has child groups.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataGroup.Key">
            <summary>
            Gets the key value for this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataGroup.Items">
            <summary>
            Gets the <see cref="T:System.Collections.IEnumerable"/> representation of all the child items.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IDataSourceItem">
            <summary>
            Defines a data source view model, used by <see cref="T:Telerik.Windows.Data.RadListSource"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IDataSourceItem.ChangeValue(System.Object)">
            <summary>
            Changes the raw data wrapped by this instance.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceItem.IsChecked">
            <summary>
            Gets a boolean value determining whether the data item
            will appear as checked when the list control shows
            check boxes next to each visual item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceItem.Value">
            <summary>
            Gets the raw data wrapped by this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceItem.Previous">
            <summary>
            Gets or sets the previous item in the owning data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceItem.Next">
            <summary>
            Gets or sets the next item in the owning data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceItem.Index">
            <summary>
            Gets or sets the index of this item within its owning data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceItem.ParentGroup">
            <summary>
            Gets or sets the parent group of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceItem.DisplayValue">
            <summary>
            Gets or sets the display value that will be used when there are no data templates for the item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataSourceItem.IsChecked">
            <summary>
            Gets a boolean value determining whether the data item
            will appear as checked when the list control shows
            check boxes next to each visual item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataSourceItem.Value">
            <summary>
            Gets the raw data associated with this item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataSourceItem.ParentGroup">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Data.IDataSourceGroup"/> instance that owns this item.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IDataSourceGroup">
            <summary>
            Represents a group view model within a collection view source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceGroup.ChildItems">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Data.IDataSourceItem"/> instances owned by this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceGroup.IsExpanded">
            <summary>
            Determines whether the group is expanded (its child items are visible and may be enumerated).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceGroup.HasChildGroups">
            <summary>
            Determines whether the group has nested groups or data items only.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceGroup.Level">
            <summary>
            Gets the zero-based level of this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataSourceGroup.LastChildItem">
            <summary>
            Gets the last child item in this group.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataSourceGroup.IsExpanded">
            <summary>
            Determines whether the groups is expanded (its child items are visible and may be enumerated).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataSourceGroup.ChildItems">
            <summary>
            Gets the child items for this group.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IDataSourceItemFactory">
            <summary>
            Creates instances of the <see cref="T:Telerik.Windows.Data.IDataSourceItem"/> type which are used by a <see cref="T:Telerik.Windows.Data.RadListSource"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IDataSourceItemFactory.CreateItem(Telerik.Windows.Data.RadListSource,System.Object)">
            <summary>
            Creates a <see cref="T:Telerik.Windows.Data.IDataSourceItem"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IDataSourceItemFactory.CreateGroup(Telerik.Windows.Data.RadListSource,Telerik.Windows.Data.DataGroup)">
            <summary>
            Creates a group item for the specified data group.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IDataSourceItemFactory.OnOwningListSourceCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the items in the owning <see cref="T:Telerik.Windows.Data.RadListSource"/> instance change.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Telerik.Windows.DynamicHelper">
            <summary>
            Encapsulates helper methods to generate Dynamic methods using System.Reflection.Emit.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DynamicHelper.CreatePropertyValueGetter(System.Type,System.String)">
            <summary>
            Generates a <see cref="T:Telerik.Windows.GetPropertyValueDelegate"/> instance to allow for retrieving property values for instances of the specified type without using reflection.
            </summary>
            <param name="type"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.GetPropertyValueDelegate">
            <summary>
            Retrieves the value of a property of an object instance. Used to generate dynamic methods to bypass reflection.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Data.ICurrencyManager">
            <summary>
            Defines a collection that adds support for tracking the current item within the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ICurrencyManager.SetCurrentItem(Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Attempts to set the specified item as the current one.
            </summary>
            <param name="item">The item instance that should be set as current.</param>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.ICurrencyManager.MoveCurrentToFirst">
            <summary>
            Attempts to set the current item to the first item within the collection.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.ICurrencyManager.MoveCurrentToNext">
            <summary>
            Attempts to set the current item to the next one that follows the current item.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.ICurrencyManager.MoveCurrentToPrevious">
            <summary>
            Attempts to set the current item to the previous one before the current item.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.ICurrencyManager.MoveCurrentToLast">
            <summary>
            Attempts to set the current item to the last item within the collection.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.ICurrencyManager.CurrencyMode">
            <summary>
            Gets or sets the mode this instance uses to update its current item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.ICurrencyManager.CurrentItem">
            <summary>
            Gets the item that is marked as Current.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.RadListSource">
            <summary>
            Implements a simple list-based data source that provides currency management and implements the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> interface.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RadListSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.Refresh">
            <summary>
            Re-evaluates the current state of the source and re-builds all the data items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.FindItem(System.Object)">
            <summary>
            Retrieves the IDataSourceItem that wraps the specified data object.
            </summary>
            <param name="data">The raw data object to search for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.GetEnumerator">
            <summary>
            Gets the <see cref="T:System.Collections.IEnumerator"/> instance used to iterate through currently available data items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.RefreshOverride">
            <summary>
            Performs the core refresh logic. Allows inheritors to specify some additional logic or to completely override the existing one.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.AttachDataOverride">
            <summary>
            Allows inheritors to perform some additional logic upon attaching to raw data.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.DetachDataOverride">
            <summary>
            Allows inheritors to perform some additional logic upon detaching to raw data.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.RadListSource.CollectionChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.ItemPropertyChangedOverride(Telerik.Windows.Controls.ItemPropertyChangedEventArgs)">
            <summary>
            Allows inheritors to perform some additional logic upon change in a single item's property.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.SourceCollectionChangedOverride(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the current instance after a change in the raw data.
            Allows inheritors to provide additional logic upon the change.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.MoveItems(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Moves the specified item from its old index to its new index after a change of type Move
            has occured in the original collection.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance that comes with the event.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.AddItems(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Adds new items to the source after a change of type Add has occurred in the original collection.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.ReplaceItems(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates data items after a change of type Replace has occurred in the original collection. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.RemoveItems(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Removes data items from the source after a change of type Remove has occurred in the original collection.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.CollectEvents(System.Collections.Generic.List{System.Delegate})">
            <summary>
            Gets all the events, exposed by this instance. Used to clean-up event subscriptions upon disposal.
            </summary>
            <param name="events"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.OnResumed(System.Boolean)">
            <summary>
            Notifies that this instance is no longer suspended.
            Allows inheritors to provide their own update logic.
            </summary>
            <param name="update">True if an Update is requested, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.SetCurrentItem(Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Sets the specified item as <see cref="P:Telerik.Windows.Data.RadListSource.CurrentItem"/> property.
            </summary>
            <param name="item">The item that should become current.</param>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.MoveCurrentToFirst">
            <summary>
            Sets the <see cref="P:Telerik.Windows.Data.RadListSource.CurrentItem"/> property to the first item in the collection.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.MoveCurrentToLast">
            <summary>
            Sets the <see cref="P:Telerik.Windows.Data.RadListSource.CurrentItem"/> property to the last item in the collection.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.MoveCurrentToNext">
            <summary>
            Sets the <see cref="P:Telerik.Windows.Data.RadListSource.CurrentItem"/> property to the next item after the current one.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.MoveCurrentToPrevious">
            <summary>
            Sets the <see cref="P:Telerik.Windows.Data.RadListSource.CurrentItem"/> property to the previous item before the current one.
            </summary>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.OnCurrentItemChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.RadListSource.CurrentItemChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.OnCurrentItemChanging(Telerik.Windows.Data.CurrentItemChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.RadListSource.CurrentItemChanging"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.SynchronizeCurrent">
            <summary>
            Syncs the current item with an external change (if the source collection implements the <see cref="T:System.ComponentModel.ICollectionView"/> interface.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.SetCurrentItemCore(Telerik.Windows.Data.IDataSourceItem,System.Boolean)">
            <summary>
            Performs the core logic of updating the current item.
            </summary>
            <param name="item">The item that needs to be set as current.</param>
            <param name="synchronizeOriginal">True to apply the change to the original <see cref="T:System.ComponentModel.ICollectionView"/> instance (if any), false otherwise.</param>
            <returns>True if operation was successful, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.IsNewCurrentItem(Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Determines whether the specified <see cref="T:Telerik.Windows.Data.IDataSourceItem"/> instance may be considered as a new Current item.
            </summary>
            <param name="newCurrent">The item instance to check for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.GetFirstItem">
            <summary>
            Gets the first item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.GetItemAfter(Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Gets the item that is right after the specified one.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.GetItemBefore(Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Gets the item that is just before the specified one.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.GetLastItem">
            <summary>
            Gets the last item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.GetItemAt(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadListSource.IndexOf(Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Retrieves the index of the specified item within the collection.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="E:Telerik.Windows.Data.RadListSource.CollectionChanged">
            <summary>
            Raised when an internal change in the collection has occurred.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.RadListSource.ItemPropertyChanged">
            <summary>
            Raised when a change in a single item property has occurred.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.IsRefreshing">
            <summary>
            Determines whether the source is in a process of refreshing its items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.IsSettingSource">
            <summary>
            Determines whether raw data initialization is running.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.SourceCollection">
            <summary>
            Gets or sets the raw data associated with this data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.ItemFactory">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Data.IDataSourceItemFactory"/> instance used to create <see cref="T:Telerik.Windows.Data.IDataSourceItem"/> instances, stored in this data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.Count">
            <summary>
            Gets the count of the collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.SupportsItemReorder">
            <summary>
            Gets a boolean value determining whether the source collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.Items">
            <summary>
            Gets the list with all data source items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.DataItemsSource">
            <summary>
            Gets the IEnumerable instance to be used when building inner view models (<see cref="T:Telerik.Windows.Data.IDataSourceItem"/> instances).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.OriginalCollectionView">
            <summary>
            Gets the source collection as ICollectionView instance.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.RadListSource.CurrentItemChanged">
            <summary>
            Raised when the <see cref="P:Telerik.Windows.Data.RadListSource.CurrentItem"/> property of this source changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.RadListSource.CurrentItemChanging">
            <summary>
            Raised when the <see cref="P:Telerik.Windows.Data.RadListSource.CurrentItem"/> property is about to be changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.CurrencyMode">
            <summary>
            Gets or sets the mode used to update the current item within the collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadListSource.CurrentItem">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Exceptions.MissingTemplatePartException">
            <summary>
            An exception of this type is thrown when an ControlTemplate with missing crucial parts is applied.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Exceptions.MissingTemplatePartException.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the MissingTemplatePartException class.
            </summary>
            <param name="missingPartType">The type of the missing part.</param>
            <param name="name">The name of the missing part.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Exceptions.MissingTemplatePartException.Message">
            <summary>
            Gets the message of the exception.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InteractionBehavior">
            <summary>
            Represents a behavior that allows for applying different interaction effects to an element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InteractionBehavior"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Override this to hook up functionality to the AssociatedObject.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.InteractionEffectBase">
            <summary>
            Represents a base class for all interaction effects that can be applied to an element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectBase.CancelEffect">
            <summary>
            Cancels the current interaction effect.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectBase.OnManipulationStarted(System.Windows.FrameworkElement,System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when manipulation has been started on an element subscribed for an interaction effect.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectBase.CanStartEffect(System.Windows.FrameworkElement,System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Determines whether an effect can be started on the specified target element.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ManipulationStartedEventArgs"/> instance containing the event data.</param>
            <returns>
            	<c>true</c> if an effect can be started on the specified target element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectBase.OnStartEffect(System.Windows.FrameworkElement,System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when the interaction effect is started.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ManipulationStartedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.InteractionEffectManager">
            <summary>
            Implements an infrastructure that allows for applying interaction effects to elements.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.InteractionEffectManager.IsInteractionEnabledProperty">
            <summary>
            Identifies the IsTiltEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.InteractionEffectManager.InteractionProperty">
            <summary>
            Identifies the Interaction dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.InteractionEffectManager.ApplyInteractionExplicitlyProperty">
            <summary>
            Identifies the ApplyInteractionExplicitly dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectManager.SetApplyInteractionExplicitly(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets a boolean value determining whether an interaction effect will be applied to a given element explicitly
            without checking the AllowedTypes and ExcludedTypes values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectManager.GetApplyInteractionExplicitly(System.Windows.DependencyObject)">
            <summary>
            Gets a boolean value determining whether an interaction effect will be applied to a given element explicitly
            without checking the AllowedTypes and ExcludedTypes values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectManager.SetIsInteractionEnabled(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets a boolean value indicating whether the tilt effect will be enabled for the given element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectManager.GetIsInteractionEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets a boolean value indicating whether the tilt effect is enabled for the given element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectManager.SetInteraction(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the interaction effect for a given element..
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectManager.GetInteraction(System.Windows.DependencyObject)">
            <summary>
            Gets the interaction effect assigned to the given element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InteractionEffectManager.CancelEffect(System.Windows.FrameworkElement)">
            <summary>
            Cancels the effect currently applied to the given element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.InteractionEffectManager.AllowedTypes">
            <summary>
            Gets a collection of types
            to which the tilt effect can be applied.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.InteractionEffectManager.ExcludedTypes">
            <summary>
            Gets a collection of types
            to which the tilt effect cannot be applied.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TiltInteractionEffect">
            <summary>
            Represents a tilt interaction effect. This effect applies plane projection to the element the user is currently interacting with
            to simulate pressure being applied on the element at the interaction point.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TiltInteractionEffect.DedicatedTiltTargetProperty">
            <summary>
            Identifies the DedicatedTiltTarget dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TiltInteractionEffect.MaxRotationAngleProperty">
            <summary>
            Identifies the MaxRotationAngle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TiltInteractionEffect.MaxZOffsetProperty">
            <summary>
            Identifies the MaxZOffset dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TiltInteractionEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.TiltInteractionEffect"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TiltInteractionEffect.SetDedicatedTiltTarget(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Sets the DedicatedTiltTarget attached property to the given <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TiltInteractionEffect.GetDedicatedTiltTarget(System.Windows.FrameworkElement)">
            <summary>
            Gets the defined DedicatedTiltTarget from the given <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TiltInteractionEffect.CancelEffect">
            <summary>
            Cancels the interaction effect applied to the given element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TiltInteractionEffect.OnStartEffect(System.Windows.FrameworkElement,System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when manipulation has been started on an element subscribed for an interaction effect.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TiltInteractionEffect.CanStartEffect(System.Windows.FrameworkElement,System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Determines whether an effect can be started on the specified target element.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ManipulationStartedEventArgs"/> instance containing the event data.</param>
            <returns>
            	<c>true</c> if an effect can be started on the specified target element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TiltInteractionEffect.MaxZOffset">
            <summary>
            Gets or sets the max Z offset.
            </summary>
            <value>The max Z offset.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.TiltInteractionEffect.MaxRotationAngle">
            <summary>
            Gets or sets the max rotation angle.
            </summary>
            <value>The max rotation angle.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.EnumerableExtensions">
            <summary>
            Defines extensions to IEnumerable specific to Telerik functionality.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.EnumerableExtensions.ReverseAnimations(System.Collections.Generic.IEnumerable{Telerik.Windows.Controls.RadAnimation})">
            <summary>
            Creates a new sequence of animations that have reverse behavior.
            </summary>
            <param name="animations">The animations to reverse.</param>
            <returns>Returns a new sequence of reversed animations.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.EnumerableExtensions.Apply``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Predicate{``0})">
            <summary>
            Applies the given function to the objects in this IEnumerable instance.
            </summary>
            <param name="objects">The objects to which to apply the function argument.</param>
            <param name="function">The function to apply.</param>
            <param name="predicate">The function argument will be applied only if this predicate returns true or if it is null.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.EnumerableExtensions.Count(System.Collections.IEnumerable)">
            <summary>
            Gets the number of items in an IEnumerable.
            </summary>
            <param name="enumerable">The IEnumerable instance from which to get the item count.</param>
            <returns>Returns the number of items in an IEnumerable.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.EnumerableExtensions.ElementAt(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Gets an element at a position.
            </summary>
            <param name="enumerable">The enumerable from which to get an element.</param>
            <param name="index">The index of the element to get.</param>
            <returns>Returns the object in the enumerable at the specified index.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.EnumerableExtensions.IsEmpty(System.Collections.IEnumerable)">
            <summary>
            Gets a boolean value determining whether the <see cref="T:System.Collections.IEnumerable"/> implementation
            has items.
            </summary>
            <param name="enumerable">The <see cref="T:System.Collections.IEnumerable"/> implementation which is checked whether it is empty or not.</param>
            <returns>True if the <see cref="T:System.Collections.IEnumerable"/> is empty, otherwise false.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Converters.NullableDoubleConverter">
            <summary>
            Converts a nullable structure of type double to and from a string representation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableDoubleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableDoubleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableDoubleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:Telerik.Windows.Controls.Converters.NullableMoveDirectionConverter">
            <summary>
            Represents a converter that recognizes nullable structure of type MoveDirection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableMoveDirectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableMoveDirectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableMoveDirectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullableMoveDirectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:Telerik.Windows.Controls.Converters.NullablePointConverter">
            <summary>
            Converts a nullable structure of type Point to and from a string representation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullablePointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullablePointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullablePointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.NullablePointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:Telerik.Windows.Controls.Converters.StringToDateTimeConverter">
            <summary>
            This class provides functionality for converting strings to <see cref="T:System.DateTime"/> values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:Telerik.Windows.Controls.ISelectorItem">
            <summary>
            Identifies a data item that is visualized by a <see cref="T:System.Windows.Controls.Primitives.Selector"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ISelectorItem.IsVisible">
            <summary>
            Gets or sets a value indicating whether the visual item associated with this instance is visible.
            </summary>
            <value><c>True</c> if the item is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ISelectorItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            	<c>True</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.IVirtualItem">
            <summary>
            Identifies a logical item that resides within a virtual data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IVirtualItem.Index">
            <summary>
            Gets the index of the item within the data source.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.VirtualizedDataItem`1">
            <summary>
            A class representing an item that is part of a <see cref="T:Telerik.Windows.Controls.VirtualizedDataSource`1"/>.
            </summary>
            <typeparam name="T">The type of the virtualized item.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataItem`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataItem`1"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataItem`1.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataItem`1"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="displayText">The display text.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataItem`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataItem`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataItem`1.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            	<c>True</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataItem`1.IsVisible">
            <summary>
            Gets or sets a value indicating whether the visual item associated with this instance is visible.
            </summary>
            <value><c>True</c> if the item is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataItem`1.Index">
            <summary>
            Gets an integer representing the logical index of the virtualized item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataItem`1.Data">
            <summary>
            Gets the generic data associated with this item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataItem`1.DisplayText">
            <summary>
            Gets or sets the string, used to visualize the item in the UI context.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.VirtualizedDataItemEventArgs`1">
            <summary>
            This class contains information about an event associated with the creation of a <see cref="T:Telerik.Windows.Controls.VirtualizedDataItem`1"/>.
            </summary>
            <typeparam name="T">The type of the virtualized item.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataItemEventArgs`1.#ctor(Telerik.Windows.Controls.VirtualizedDataItem{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataItemEventArgs`1"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataItemEventArgs`1.Item">
            <summary>
            Gets or sets the item associated with this instance.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.VirtualizedDataSource`1">
            <summary>
            This class represents a data source supporting data virtualization. Items are not directly loaded here
            but acquired on demand.
            </summary>
            <typeparam name="T">The type of the virtualized values.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataSource`1"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataSource`1"/> class.
            </summary>
            <param name="virtualCount">The count of the virtual items contained in this data source.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</param>
            <returns>
            The index of <paramref name="value"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to add to the <see cref="T:System.Collections.IList"/>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</param>
            <returns>
            True if the <see cref="T:System.Object"/> is found in the <see cref="T:System.Collections.IList"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert into the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
            <exception cref="T:System.NullReferenceException">
            <paramref name="value"/> is null reference in the <see cref="T:System.Collections.IList"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove from the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero. </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.-or- The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/></exception>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.GetItemIndex(Telerik.Windows.Controls.VirtualizedDataItem{`0})">
            <summary>
            Gets an integer representing the logical index of a given <see cref="T:Telerik.Windows.Controls.VirtualizedDataItem`1"/>.
            </summary>
            <param name="item">The item which index to get.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.CreateDataItem(System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataItem`1"/> class for a given index.
            </summary>
            <param name="index">The index for which to create an item.</param>
            <returns>The new item.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.CreateDataItemInstance">
            <summary>
            Creates an instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataItem`1"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VirtualizedDataSource`1.GetItemAt(System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:Telerik.Windows.Controls.VirtualizedDataItem`1"/> class at a given index.
            </summary>
            <param name="index">The index of the item to get.</param>
            <returns>The item.</returns>
        </member>
        <member name="E:Telerik.Windows.Controls.VirtualizedDataSource`1.DataItemNeeded">
            <summary>
            Occurs when a data is needed for a virtualized item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataSource`1.VirtualCount">
            <summary>
            Gets the count of virtual items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataSource`1.Count">
            <summary>
            Gets the virtual count of this data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"/> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"/> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataSource`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.VirtualizedDataSource`1.Item(System.Int32)">
            <summary>
            Gets the data item at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ElementTreeHelper">
            <summary>
            Exposes helper methods for searching and traversing visual trees.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.FindVisualAncestor``1(System.Windows.DependencyObject,System.Predicate{System.Windows.DependencyObject})">
            <summary>
            Finds a visual ancestor from a given type and based on a given
            condition that is in the parent chain of a given child element.
            </summary>
            <typeparam name="T">The type of the element to look for.</typeparam>
            <param name="child">The child.</param>
            <param name="condition">The condition.</param>
            <returns>An instance of the given type if found, otherwise null.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.FindLastVisualAncestor``1(System.Windows.DependencyObject,System.Predicate{System.Windows.DependencyObject})">
            <summary>
            Finds the last visual ancestor of the provided type.
            </summary>
            <typeparam name="T">The type of the ancestor to search for.</typeparam>
            <param name="child">The from which to start the search.</param>
            <param name="condition">A condition to test each ancestor of the T type.</param>
            <returns>The last ancestor of the specified T type which matches the condition.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.FindVisualDescendant``1(System.Windows.DependencyObject,System.Predicate{System.Windows.DependencyObject})">
            <summary>
            Finds a visual descendant from a given type and based on a given
            condition that is in the hierarchy of a given parent element.
            </summary>
            <typeparam name="T">The type of the element to look for.</typeparam>
            <param name="parent">The parent.</param>
            <param name="condition">The condition.</param>
            <returns>An instance of the given type if found, otherwise null.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.EnumVisualDescendants(System.Windows.DependencyObject,System.Predicate{System.Windows.DependencyObject},Telerik.Windows.Controls.TreeTraversalMode)">
            <summary>
            Returns a lazily evaluated iterator that allows linear iteration
            over a tree of DependencyObjects.
            </summary>
            <param name="parent">The root element of the tree to iterate over.</param>
            <param name="condition">A predicate to filter what elements are returned.</param>
            <param name="mode">The tree traversal mode of the iteration algorithm.</param>
            <returns>
            Returns a lazily evaluated iterator that allows linear iteration
            over a tree of DependencyObjects.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.IsElementRendered(System.Windows.FrameworkElement)">
            <summary>
            Determines whether the specified element is rendered on the visual tree.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.SafeTransformPoint(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.Point)">
            <summary>
            Transforms the specified point using the TransformToVisual routine while checking for valid transform conditions - e.g. elements are both loaded and rendered.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.SafeTransformBounds(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.Rect)">
            <summary>
            Transforms the specified rect using the TransformToVisual routine while checking for valid transform conditions - e.g. elements are both loaded and rendered.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.IsParentChainHitTestVisible(System.Windows.UIElement)">
            <summary>
            Determines whether all the ancestors of the specified <see cref="T:System.Windows.UIElement"/> instance are hit-test visible.
            </summary>
            <param name="element">The element to start from.</param>
            <returns>True if all the ancestors are hit-test visible, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ElementTreeHelper.TransformRectForFlowDirection(System.Windows.Rect,System.Windows.FlowDirection)">
            <summary>
            Transforms a rectangle according to the provided float direction. Since a <see cref="T:System.Windows.Rect"/>
            struct has its origin always at the top left point, to make a <see cref="T:System.Windows.Rect"/> usable
            in a RightToLeft scenario we need to offset its X coordinate with its width.
            </summary>
            <param name="source">The source rectangle to transform.</param>
            <param name="direction">The flow direction to transform against.</param>
            <returns>The transformed rectangle.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.WeakReferenceList`1">
            <summary>
            Wraps instances of type T in WeakReference and stores them in a List.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.WeakReferenceList`1"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.WeakReferenceList`1"/> class.
            </summary>
            <param name="cleanNonAlive">True to remove any non-alive instances automatically, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.WeakReferenceList`1"/> class.
            </summary>
            <param name="cleanNonAlive">True to remove any non-alive instances automatically, false otherwise.</param>
            <param name="trackResurrection">True to track object resurrection, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.Add(`0)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.IndexOf(`0)">
            <summary>
            Gets the index of the specified value within the list.
            </summary>
            <param name="value">The value to check for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.Remove(`0)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.Clear">
            <summary>
            Clears the list.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the value at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.CleanNonAlive">
            <summary>
            Cleans all targets that are no longer alive.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.GetEnumerator">
            <summary>
            Gets the enumerator that iterates through all items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.WeakReferenceList`1.InsertCore(System.Int32,`0)">
            <summary>
            Core insert implementation. Allows inheritors to provide their own implementation.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.WeakReferenceList`1.AutoCleanNonAlive">
            <summary>
            Determines whether the list will automatically remove any contained non-alive weak reference.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.WeakReferenceList`1.TrackRessurection">
            <summary>
            Determines the WeakReference.TrackRessurection property for all T instances added.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.WeakReferenceList`1.Count">
            <summary>
            Gets the count of the list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.WeakReferenceList`1.List">
            <summary>
            Gets the internal List used to store all instances.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.WeakReferenceList`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Windows.Controls.Exceptions.InvalidTemplateException">
            <summary>
            This exception is thrown when vital parts of Telerik controls are missing from their templates.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Exceptions.InvalidTemplateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidTemplateException class.
            </summary>
            <param name="message">A string describing what exactly is wrong with the invalid template.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Exceptions.InvalidTemplateException.#ctor">
            <summary>
            Initializes a new instance of the InvalidTemplateException class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Exceptions.InvalidTemplateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidTemplateException class.
            </summary>
            <param name="message">A message describing what is wrong with the template.</param>
            <param name="innerException">The underlaying exception that caused the template to become invalid.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.TiltInteractionState">
            <summary>
            Represents the possible tilt interaction states.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TiltInteractionState.Tilting">
            <summary>
            The element is currently being tilted.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TiltInteractionState.EndingTilting">
            <summary>
            A tilt effect reset procedure is started.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TiltInteractionState.EndedTilting">
            <summary>
            A tilt effect reset procedure is finished.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TiltInteractionInfo">
            <summary>
            Represents a context describing a tilted element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TiltInteractionInfo.#ctor(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.TiltInteractionInfo"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="resetAnimation">The reset animation.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.TiltInteractionInfo.TargetElement">
            <summary>
            Gets or sets the target element that is tilted.
            </summary>
            <value>The target element.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.TiltInteractionInfo.ResetAnimation">
            <summary>
            Gets or sets the tilt reset animation.
            </summary>
            <value>The reset animation.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.TiltInteractionInfo.State">
            <summary>
            Gets or sets the current tilt interaction state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ISupportTransparency">
            <summary>
            An interface that defines common properties and methods for tile data that supports transparency.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ISupportTransparency.IsTransparencySupported">
            <summary>
            Gets or sets a value indicating whether this tile will support transparent elements.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ITileData">
            <summary>
            An interface that defines common properties and methods for the different types of tile data.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ITileData.CreateTileData(System.Uri)">
            <summary>
            Prepares shell tile data from Telerik's tile data.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ITileData.RegisterTile(System.Uri)">
            <summary>
            Saves information about the actual location of the images used by LiveTileHelper.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ITileData.MeasureMode">
            <summary>
            Provides options for the display of UIElement in tiles. 
            If the mode is Tile, the tile will be created with its default size and the provided element will be placed in the dimensions provided by the tile itself.
            If the mode is Element, the element will be taken with its own size and stretched/schrinked to fit the tile.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.MeasureMode">
            <summary>
            Defines the possible modes for measuring the elements passed to <see cref="T:Telerik.Windows.Controls.LiveTileHelper"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MeasureMode.Tile">
            <summary>
            In this mode when <see cref="T:Telerik.Windows.Controls.LiveTileHelper"/> creates tiles it takes their size as a base and places the passed element relatively to the tile.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MeasureMode.Element">
            <summary>
            In this mode when <see cref="T:Telerik.Windows.Controls.LiveTileHelper"/> creates tiles it takes the size of the UIElement and stretches it to fit the tile if necessary.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LiveTileHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CleanupUnpinnedTilesResources">
            <summary>
            Clean the used resources of tiles that were unpinned from the home screen by the end users.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateTile(Telerik.Windows.Controls.RadExtendedTileData,System.Uri)">
            <summary>
            Creates a tile and pins it to the phone home screen.
            </summary>
            <param name="extendedTileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateTile(Telerik.Windows.Controls.RadExtendedTileData,System.Uri,System.Boolean)">
            <summary>
            Creates a tile and pins it to the phone home screen.
            </summary>
            <param name="extendedTileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
            <param name="skipCleanup">If set to <c>true</c> the tile data saved on disc will not be removed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateTile(Telerik.Windows.Controls.ITileData,System.Uri,System.Boolean)">
            <summary>
            Creates a tile and pins it to the phone home screen.
            </summary>
            <param name="tileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
            <param name="supportsWideTile">If set to <c>true</c> wide tile size is supported.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateTile(Telerik.Windows.Controls.ITileData,System.Uri,System.Boolean,System.Boolean)">
            <summary>
            Creates a tile and pins it to the phone home screen.
            </summary>
            <param name="tileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
            <param name="supportsWideTile">If set to <c>true</c> wide tile size is supported.</param>
            <param name="skipCleanup">If set to <c>true</c> the tile data saved on disc will not be removed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateOrUpdateTile(Telerik.Windows.Controls.RadExtendedTileData,System.Uri)">
            <summary>
            Creates a tile and pins it to the phone home screen, removing any previous tile with the same Uri.
            </summary>
            <param name="extendedTileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateOrUpdateTile(Telerik.Windows.Controls.RadExtendedTileData,System.Uri,System.Boolean)">
            <summary>
            Creates a tile and pins it to the phone home screen, or updates the tile with new data if tile with same Uri is found.
            </summary>
            <param name="extendedTileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
            <param name="skipCleanup">If set to <c>true</c> the tile data saved on disc will not be removed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateOrUpdateTile(Telerik.Windows.Controls.ITileData,System.Uri,System.Boolean)">
            <summary>
            Creates a tile and pins it to the phone home screen, removing any previous tile with the same Uri.
            </summary>
            <param name="tileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
            <param name="supportsWideTile">If set to <c>true</c> wide tile size is supported.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateOrUpdateTile(Telerik.Windows.Controls.ITileData,System.Uri,System.Boolean,System.Boolean)">
            <summary>
            Creates a tile and pins it to the phone home screen, or updates the tile with new data if tile with same Uri is found.
            </summary>
            <param name="tileData">The extended tile data.</param>
            <param name="navigationUri">The navigation URI.</param>
            <param name="supportsWideTile">If set to <c>true</c> wide tile size is supported.</param>
            <param name="skipCleanup">If set to <c>true</c> the tile data saved on disc will not be removed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.UpdateTile(Microsoft.Phone.Shell.ShellTile,Telerik.Windows.Controls.RadExtendedTileData)">
            <summary>
            Updates the tile info.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.UpdateTile(Microsoft.Phone.Shell.ShellTile,Telerik.Windows.Controls.RadExtendedTileData,System.Boolean)">
            <summary>
            Updates the tile info.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.UpdateTile(Microsoft.Phone.Shell.ShellTile,Telerik.Windows.Controls.ITileData)">
            <summary>
            Updates the tile info.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.UpdateTile(Microsoft.Phone.Shell.ShellTile,Telerik.Windows.Controls.ITileData,System.Boolean)">
            <summary>
            Updates the tile info.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.GetTile(System.Uri)">
            <summary>
            Gets the tile.
            </summary>
            <param name="tileUri">The tile URI.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelper.CreateStandardTileData(Telerik.Windows.Controls.RadExtendedTileData,System.Uri)">
            <summary>
            Prepares standard tile data from Telerik extended tile data.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadCycleTileData">
            <summary>
            Represents a class used for generating cycle tiles from visual elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadCycleTileData.SmallVisualElement">
            <summary>
            Gets or sets the visual element which will be used as a small background image.
            </summary>
            <remarks>
            Setting this will override the SmallBackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadCycleTileData.CycleVisualElements">
            <summary>
            Gets or sets the visual elements which will be used as cycle images.
            </summary>
            <remarks>
            Setting this will override the CycleImages property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadCycleTileData.IsTransparencySupported">
            <summary>
            Gets or sets a value indicating whether this tile will support transparent elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadCycleTileData.MeasureMode">
            <summary>
            Provides options for the display of UIElement in tiles. 
            If the mode is Tile, the tile will be created with its default size and the provided element will be placed in the dimensions provided by the tile itself.
            If the mode is Element, the element will be taken with its own size and stretched/schrinked to fit the tile.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadExtendedTileData">
            <summary>
            Represents the class used for generating the live tiles.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExtendedTileData.VisualElement">
            <summary>
            Gets or sets the visual element which will be used as a background of the front tile.
            </summary>
            <remarks>
            Setting this will override the BackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExtendedTileData.BackVisualElement">
            <summary>
            Gets or sets the visual element which will be used as a background of the back tile.
            </summary>
            <remarks>
            Setting this will override the BackBackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExtendedTileData.IsTransparencySupported">
            <summary>
            Gets or sets a value indicating whether this tile will support transparent elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExtendedTileData.MeasureMode">
            <summary>
            Provides options for the display of UIElement in tiles. 
            If the mode is Tile, the tile will be created with its default size and the provided element will be placed in the dimensions provided by the tile itself.
            If the mode is Element, the element will be taken with its own size and stretched/schrinked to fit the tile.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadFlipTileData">
            <summary>
            Represents a class used for generating flip tiles from visual elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFlipTileData.VisualElement">
            <summary>
            Gets or sets the visual element which will be used as a background of the front side of the tile.
            </summary>
            <remarks>
            Setting this will override the BackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFlipTileData.BackVisualElement">
            <summary>
            Gets or sets the visual element which will be used as a background of the back side of the tile.
            </summary>
            <remarks>
            Setting this will override the BackBackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFlipTileData.SmallVisualElement">
            <summary>
            Gets or sets the visual element which will be used as a background for the small size tile.
            </summary>
            <remarks>
            Setting this will override the SmallBackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFlipTileData.WideVisualElement">
            <summary>
            Gets or sets the visual element which will be used as a background for the front side of the wide size tile.
            </summary>
            <remarks>
            Setting this will override the WideBackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFlipTileData.WideBackVisualElement">
            <summary>
            Gets or sets the visual element which will be used as a background for the back side of the wide size tile.
            </summary>
            <remarks>
            Setting this will override the WideBackBackgroundImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFlipTileData.IsTransparencySupported">
            <summary>
            Gets or sets a value indicating whether this tile will support transparent elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFlipTileData.MeasureMode">
            <summary>
            Provides options for the display of UIElement in tiles. 
            If the mode is Tile, the tile will be created with its default size and the provided element will be placed in the dimensions provided by the tile itself.
            If the mode is Element, the element will be taken with its own size and stretched/schrinked to fit the tile.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadIconicTileData">
            <summary>
            Represents a class used for generating iconic tiles from visual elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadIconicTileData.IconVisualElement">
            <summary>
            Gets or sets the visual element which will be used as an icon image of the tile.
            </summary>
            <remarks>
            Setting this will override the IconImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadIconicTileData.SmallIconVisualElement">
            <summary>
            Gets or sets the visual element which will be used as a small icon image of the tile.
            </summary>
            <remarks>
            Setting this will override the SmallIconImage property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadIconicTileData.MeasureMode">
            <summary>
            Provides options for the display of UIElement in tiles. 
            If the mode is Tile, the tile will be created with its default size and the provided element will be placed in the dimensions provided by the tile itself.
            If the mode is Element, the element will be taken with its own size and stretched/schrinked to fit the tile.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LiveTileHelperData.SavedCycleTileData">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LiveTileHelperData.SavedTileData">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelperData.SavedTileData.CleanupUnpinnedTilesResourcesForItem">
            <summary>
            Clean the used resources of tiles that were unpinned from the home screen by the end users.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedTileData.NavigationString">
            <summary>
            Gets or sets the navigation string.
            </summary>
            <value>The navigation string.</value>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelperData.SavedCycleTileData.CleanupUnpinnedTilesResourcesForItem">
            <summary>
            Clean the used resources of tiles that were unpinned from the home screen by the end users.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedCycleTileData.SmallBackgroundImagePath">
            <summary>
            Gets or sets the small background image path.
            </summary>
            <value>The small background image path.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedCycleTileData.CycleImagesPaths">
            <summary>
            Gets or sets the cycle images paths.
            </summary>
            <value>
            The cycle images paths.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.LiveTileHelperData.SavedFlipTileData">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LiveTileHelperData.SavedStandardTileData">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelperData.SavedStandardTileData.CleanupUnpinnedTilesResourcesForItem">
            <summary>
            Clean the used resources of tiles that were unpinned from the home screen by the end users.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedStandardTileData.FrontBackgroundImagePath">
            <summary>
            Gets or sets the front background image path.
            </summary>
            <value>The front background image path.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedStandardTileData.BackBackgroundImagePath">
            <summary>
            Gets or sets the back background image path.
            </summary>
            <value>The back background image path.</value>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelperData.SavedFlipTileData.CleanupUnpinnedTilesResourcesForItem">
            <summary>
            Clean the used resources of tiles that were unpinned from the home screen by the end users.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedFlipTileData.SmallBackgroundImagePath">
            <summary>
            Gets or sets the small background image path.
            </summary>
            <value>The small background image path.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedFlipTileData.WideBackgroundImagePath">
            <summary>
            Gets or sets wide background image path.
            </summary>
            <value>The wide background image path.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedFlipTileData.WideBackBackgroundImagePath">
            <summary>
            Gets or sets wide back background image path.
            </summary>
            <value>The wide back background image path.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.LiveTileHelperData.SavedIconicTileData">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LiveTileHelperData.SavedIconicTileData.CleanupUnpinnedTilesResourcesForItem">
            <summary>
            Clean the used resources of tiles that were unpinned from the home screen by the end users.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedIconicTileData.IconImagePath">
            <summary>
            Gets or sets the icon image path.
            </summary>
            <value>The icon image path.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.LiveTileHelperData.SavedIconicTileData.SmallIconImagePath">
            <summary>
            Gets or sets small icon image path.
            </summary>
            <value>The small icon image path.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.LocalizationManager">
            <summary>
            Represents a singleton class that manages application string resources.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.GetString(System.String)">
            <summary>
            Gets the localized version of the string, associated with the specified key. 
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.GlobalResourceManager">
            <summary>
            Gets or sets the resource manager that contains localized version of all the strings within all assemblies.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.GlobalStringLoader">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Controls.IStringResourceLoader"/> instance used to provide code-based localization for all the assemblies.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.DefaultResourceManager">
            <summary>
            Gets or sets the ResourceManager instance used to look-up resources.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.ResourceManager">
            <summary>
            Gets or sets the ResourceManager instance used to look-up resources.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.StringLoader">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Controls.IStringResourceLoader"/> instance used to provide code-based localization per assembly.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ViewModelBase">
            <summary>
            Base class for all ViewModel classes.
            It provides support for property change notifications and has a DisplayName property.
            This class is abstract.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ViewModelBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            Raises this object's <see cref="E:Telerik.Windows.Controls.ViewModelBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property that has a new value.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.ViewModelBase.PropertyChanged">
            <summary>
            Raised when a property on this object has a new value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.IStringResourceLoader">
            <summary>
            Represents a custom loader that may be used to look-up strings through code.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.IStringResourceLoader.GetString(System.String)">
            <summary>
            Retrieves a localized version of the string associated with the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Configuration.Assemblies.AssemblyInfoHelper">
            <summary>
            This class supports the controls infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Telerik.Configuration.Assemblies.AssemblyInfoHelper.CopyrightMessage">
            <summary>
            This field supports the controls infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Telerik.Configuration.Assemblies.AssemblyInfoHelper.AssemblyDescription">
            <summary>
            This field supports the controls infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Telerik.Configuration.Assemblies.AssemblyInfoHelper.AssemblyProduct">
            <summary>
            This field supports the controls infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Telerik.Configuration.Assemblies.AssemblyInfoHelper.CompanyName">
            <summary>
            This field supports the controls infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
    </members>
</doc>
