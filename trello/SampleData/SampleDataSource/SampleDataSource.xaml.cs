//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.SampleDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class SampleDataSource { }
#else

	public class SampleDataSource : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public SampleDataSource()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/trello;component/SampleData/SampleDataSource/SampleDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private Boards _Boards = new Boards();

		public Boards Boards
		{
			get
			{
				return this._Boards;
			}
		}

		private Cards _Cards = new Cards();

		public Cards Cards
		{
			get
			{
				return this._Cards;
			}
		}

		private BoardCard _BoardCard = new BoardCard();

		public BoardCard BoardCard
		{
			get
			{
				return this._BoardCard;
			}

			set
			{
				if (this._BoardCard != value)
				{
					this._BoardCard = value;
					this.OnPropertyChanged("BoardCard");
				}
			}
		}
	}

	public class Boards : System.Collections.ObjectModel.ObservableCollection<BoardsItem>
	{ 
	}

	public class BoardsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private double _Id = 0;

		public double Id
		{
			get
			{
				return this._Id;
			}

			set
			{
				if (this._Id != value)
				{
					this._Id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}

		private string _Desc = string.Empty;

		public string Desc
		{
			get
			{
				return this._Desc;
			}

			set
			{
				if (this._Desc != value)
				{
					this._Desc = value;
					this.OnPropertyChanged("Desc");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private bool _IsPrivate = false;

		public bool IsPrivate
		{
			get
			{
				return this._IsPrivate;
			}

			set
			{
				if (this._IsPrivate != value)
				{
					this._IsPrivate = value;
					this.OnPropertyChanged("IsPrivate");
				}
			}
		}

		private bool _Pinned = false;

		public bool Pinned
		{
			get
			{
				return this._Pinned;
			}

			set
			{
				if (this._Pinned != value)
				{
					this._Pinned = value;
					this.OnPropertyChanged("Pinned");
				}
			}
		}
	}

	public class Cards : System.Collections.ObjectModel.ObservableCollection<CardsItem>
	{ 
	}

	public class CardsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private Labels _Labels = new Labels();

		public Labels Labels
		{
			get
			{
				return this._Labels;
			}
		}

		private Members _Members = new Members();

		public Members Members
		{
			get
			{
				return this._Members;
			}
		}

		private double _Id = 0;

		public double Id
		{
			get
			{
				return this._Id;
			}

			set
			{
				if (this._Id != value)
				{
					this._Id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}

		private string _Desc = string.Empty;

		public string Desc
		{
			get
			{
				return this._Desc;
			}

			set
			{
				if (this._Desc != value)
				{
					this._Desc = value;
					this.OnPropertyChanged("Desc");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private double _Votes = 0;

		public double Votes
		{
			get
			{
				return this._Votes;
			}

			set
			{
				if (this._Votes != value)
				{
					this._Votes = value;
					this.OnPropertyChanged("Votes");
				}
			}
		}

		private bool _Voted = false;

		public bool Voted
		{
			get
			{
				return this._Voted;
			}

			set
			{
				if (this._Voted != value)
				{
					this._Voted = value;
					this.OnPropertyChanged("Voted");
				}
			}
		}

		private double _CheckItems = 0;

		public double CheckItems
		{
			get
			{
				return this._CheckItems;
			}

			set
			{
				if (this._CheckItems != value)
				{
					this._CheckItems = value;
					this.OnPropertyChanged("CheckItems");
				}
			}
		}

		private double _CheckItemsChecked = 0;

		public double CheckItemsChecked
		{
			get
			{
				return this._CheckItemsChecked;
			}

			set
			{
				if (this._CheckItemsChecked != value)
				{
					this._CheckItemsChecked = value;
					this.OnPropertyChanged("CheckItemsChecked");
				}
			}
		}

		private string _Due = string.Empty;

		public string Due
		{
			get
			{
				return this._Due;
			}

			set
			{
				if (this._Due != value)
				{
					this._Due = value;
					this.OnPropertyChanged("Due");
				}
			}
		}
	}

	public class Labels : System.Collections.ObjectModel.ObservableCollection<LabelsItem>
	{ 
	}

	public class LabelsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private string _Color = string.Empty;

		public string Color
		{
			get
			{
				return this._Color;
			}

			set
			{
				if (this._Color != value)
				{
					this._Color = value;
					this.OnPropertyChanged("Color");
				}
			}
		}
	}

	public class Members : System.Collections.ObjectModel.ObservableCollection<MembersItem>
	{ 
	}

	public class MembersItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private System.Windows.Media.ImageSource _ImageUri = null;

		public System.Windows.Media.ImageSource ImageUri
		{
			get
			{
				return this._ImageUri;
			}

			set
			{
				if (this._ImageUri != value)
				{
					this._ImageUri = value;
					this.OnPropertyChanged("ImageUri");
				}
			}
		}
	}

	public class BoardCard : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private Labels1 _Labels = new Labels1();

		public Labels1 Labels
		{
			get
			{
				return this._Labels;
			}
		}

		private Checklists _Checklists = new Checklists();

		public Checklists Checklists
		{
			get
			{
				return this._Checklists;
			}
		}

		private Attachments _Attachments = new Attachments();

		public Attachments Attachments
		{
			get
			{
				return this._Attachments;
			}
		}

		private Members1 _Members = new Members1();

		public Members1 Members
		{
			get
			{
				return this._Members;
			}
		}

		private double _Name = 0;

		public double Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private double _Votes = 0;

		public double Votes
		{
			get
			{
				return this._Votes;
			}

			set
			{
				if (this._Votes != value)
				{
					this._Votes = value;
					this.OnPropertyChanged("Votes");
				}
			}
		}

		private double _CheckItems = 0;

		public double CheckItems
		{
			get
			{
				return this._CheckItems;
			}

			set
			{
				if (this._CheckItems != value)
				{
					this._CheckItems = value;
					this.OnPropertyChanged("CheckItems");
				}
			}
		}

		private double _CheckItemsChecked = 0;

		public double CheckItemsChecked
		{
			get
			{
				return this._CheckItemsChecked;
			}

			set
			{
				if (this._CheckItemsChecked != value)
				{
					this._CheckItemsChecked = value;
					this.OnPropertyChanged("CheckItemsChecked");
				}
			}
		}

		private string _Due = string.Empty;

		public string Due
		{
			get
			{
				return this._Due;
			}

			set
			{
				if (this._Due != value)
				{
					this._Due = value;
					this.OnPropertyChanged("Due");
				}
			}
		}

		private string _Desc = string.Empty;

		public string Desc
		{
			get
			{
				return this._Desc;
			}

			set
			{
				if (this._Desc != value)
				{
					this._Desc = value;
					this.OnPropertyChanged("Desc");
				}
			}
		}

		private double _Comments = 0;

		public double Comments
		{
			get
			{
				return this._Comments;
			}

			set
			{
				if (this._Comments != value)
				{
					this._Comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}

		private Activity _Activity = new Activity();

		public Activity Activity
		{
			get
			{
				return this._Activity;
			}
		}
	}

	public class Labels1 : System.Collections.ObjectModel.ObservableCollection<LabelsItem1>
	{ 
	}

	public class LabelsItem1 : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Color = string.Empty;

		public string Color
		{
			get
			{
				return this._Color;
			}

			set
			{
				if (this._Color != value)
				{
					this._Color = value;
					this.OnPropertyChanged("Color");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}

	public class Checklists : System.Collections.ObjectModel.ObservableCollection<ChecklistsItem>
	{ 
	}

	public class ChecklistsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private Items _Items = new Items();

		public Items Items
		{
			get
			{
				return this._Items;
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}

	public class Items : System.Collections.ObjectModel.ObservableCollection<ItemsItem>
	{ 
	}

	public class ItemsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private bool _Checked = false;

		public bool Checked
		{
			get
			{
				return this._Checked;
			}

			set
			{
				if (this._Checked != value)
				{
					this._Checked = value;
					this.OnPropertyChanged("Checked");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}

	public class Attachments : System.Collections.ObjectModel.ObservableCollection<AttachmentsItem>
	{ 
	}

	public class AttachmentsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private System.Windows.Media.ImageSource _PreviewUri = null;

		public System.Windows.Media.ImageSource PreviewUri
		{
			get
			{
				return this._PreviewUri;
			}

			set
			{
				if (this._PreviewUri != value)
				{
					this._PreviewUri = value;
					this.OnPropertyChanged("PreviewUri");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private string _Date = string.Empty;

		public string Date
		{
			get
			{
				return this._Date;
			}

			set
			{
				if (this._Date != value)
				{
					this._Date = value;
					this.OnPropertyChanged("Date");
				}
			}
		}

		private string _Extension = string.Empty;

		public string Extension
		{
			get
			{
				return this._Extension;
			}

			set
			{
				if (this._Extension != value)
				{
					this._Extension = value;
					this.OnPropertyChanged("Extension");
				}
			}
		}

		private double _Bytes = 0;

		public double Bytes
		{
			get
			{
				return this._Bytes;
			}

			set
			{
				if (this._Bytes != value)
				{
					this._Bytes = value;
					this.OnPropertyChanged("Bytes");
				}
			}
		}
	}

	public class Members1 : System.Collections.ObjectModel.ObservableCollection<MembersItem1>
	{ 
	}

	public class MembersItem1 : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _AvatarHash = string.Empty;

		public string AvatarHash
		{
			get
			{
				return this._AvatarHash;
			}

			set
			{
				if (this._AvatarHash != value)
				{
					this._AvatarHash = value;
					this.OnPropertyChanged("AvatarHash");
				}
			}
		}

		private string _Username = string.Empty;

		public string Username
		{
			get
			{
				return this._Username;
			}

			set
			{
				if (this._Username != value)
				{
					this._Username = value;
					this.OnPropertyChanged("Username");
				}
			}
		}

		private string _FullName = string.Empty;

		public string FullName
		{
			get
			{
				return this._FullName;
			}

			set
			{
				if (this._FullName != value)
				{
					this._FullName = value;
					this.OnPropertyChanged("FullName");
				}
			}
		}

		private bool _Active = false;

		public bool Active
		{
			get
			{
				return this._Active;
			}

			set
			{
				if (this._Active != value)
				{
					this._Active = value;
					this.OnPropertyChanged("Active");
				}
			}
		}

		private string _Bio = string.Empty;

		public string Bio
		{
			get
			{
				return this._Bio;
			}

			set
			{
				if (this._Bio != value)
				{
					this._Bio = value;
					this.OnPropertyChanged("Bio");
				}
			}
		}
	}

	public class ActivityItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
	}

	public class Activity : System.Collections.ObjectModel.ObservableCollection<ActivityItem>
	{ 
	}
#endif
}
